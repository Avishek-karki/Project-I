#include<io.h>
#include<conio.h>
#include<stdio.h>
#include<graphics.h>
#include<stdlib.h>
#include<dos.h>
#include<iostream.h>
#include<math.h>
int ps;//for player score & game state
void score()
{clrscr();
  setfillstyle(SOLID_FILL,0);
 bar(0,0,getmaxx(),getmaxy());
 struct player
   {char name[10];
    int score;
   };
struct player p[10];
FILE *ptr;
static int i=0;
p[i].score=ps;
ptr=fopen("score.dat","a");
if(ptr==NULL)
  {printf("Cannot open file");
  }
else
 {printf("Enter name:\t");
 scanf("%s",&p[i].name);
 fprintf(ptr,"%s\t%d\n",p[i].name,p[i].score);//save name & score in file
 } 
 fclose(ptr);
i++;
}
void highs()
{FILE *fp;
int count=0;
  struct player{
  char name[20];
  int score;
};
fp=fopen("score.dat","r");
if(fp==NULL)
  {printf("High score is not available");
   }
else{
struct player p[10],high,temp;
high=p[0];
while(fscanf(fp,"%s%d",&p[count].name,&p[count].score)!=EOF){
 fscanf(fp,"%s%d",&p[count].name,&p[count].score);
  if(high.score<p[count].score)
  {
    high=p[count];
     }
  count++;
}
printf("\nName\t\tScore\n");
printf("%s\t\t%d",high.name,high.score);
}
fclose(fp);
for(int l=0;;l++)
{int x,k;
if(kbhit()){
  k=getch();
  if(k==27)break;
  }
}
}

void gos()
{
   int a;
   for (a = 1000; a >= 200; a = a - 50)
   {
      sound(a);
      delay(105);
   }   nosound();
}
void gosw()
{
   int a;
   for (a = 200; a <= 1000; a = a + 50)
   {
      sound(a);
      delay(105);
   }
   nosound();
}
void gameover()
{
settextstyle(4,0,7);
outtextxy(140,200,"GAME OVER");
gos();
score();//determines game is over 
}
void gameoverw()
{
settextstyle(4,0,7);
outtextxy(160,150,"You Win!");
outtextxy(140,200,"GAME OVER");
gosw();
score();//determines game is over 
}
void loading()
{setfillstyle(SOLID_FILL,0);
 bar(0,0,getmaxx(),getmaxy());

settextstyle(7,HORIZ_DIR,1);
outtextxy(200,200,"\n\n\nYou have cleared this level.\n\n\n");
int a=240,b=250;
outtextxy(a,b,"Loading next level");delay(500);a=a+180;
outtextxy(a,b,".");delay(300);a=a+12;
outtextxy(a,b,".");delay(300);a=a+12;
outtextxy(a,b,".");delay(300);a=a+12;
outtextxy(a,b,".");delay(300);b=b+12;

setfillstyle(SOLID_FILL,0);
bar(0,0,getmaxx(),getmaxy());
}
void countm(int *co,int* inc)
{  static int a=0,b=1,c=2;
  *inc+=5;
  setfillstyle(SOLID_FILL,0);
  bar(515,210,550,228);
  floodfill(530,220,0);
  
  setcolor(a%15+1);
  circle(530,200,60);
  setcolor(b%15+1);
  circle(530,200,50);
  setcolor(c%15+1);
  circle(530,200,55);
  setcolor(14);
  outtextxy(515,198,"MOVE");
  char arr[50];
  sprintf(arr,"%d",*co);
    setcolor(3);
  outtextxy(520,215,arr);
  *co=*co+1;
  setcolor(12);
  outtextxy(500,280,"w -> Up");
  outtextxy(500,290,"s -> Down");
  outtextxy(500,300,"a -> Left");
  outtextxy(500,310,"d -> Right");
a++;
b++;
c++;
}
void body1() //figure
{setcolor(WHITE);setfillstyle(SOLID_FILL,7);
bar(3,3,450,450);
setfillstyle(SOLID_FILL,BLACK);
//next horiz bars
//1st row
bar(3,30,30,30);
//bar(30,30,60,30);
//bar(60,30,90,30);
bar(90,30,120,30);
bar(120,30,150,30);
//bar(150,30,180,30);
//bar(180,30,210,30);
bar(210,30,240,30);
//bar(240,30,270,30);
//bar(270,30,300,30);
//bar(300,30,330,30);
bar(330,30,360,30);
bar(360,30,390,30);
bar(390,30,420,30);
bar(420,30,450,30);

//2nd row
//bar(0,60,30,60);
//bar(30,60,60,60);
bar(60,60,90,60);
//bar(90,60,120,60);
//bar(120,60,150,60);
//bar(150,60,180,60);
//bar(180,60,210,60);
//bar(210,60,240,60);
bar(240,60,270,60);
bar(270,60,300,60);
bar(300,60,330,60);
//bar(330,60,360,60);
//bar(360,60,390,60);
bar(390,60,420,60);
//bar(420,60,450,60);

//3rd row
//bar(0,90,30,90);
bar(30,90,60,90);
//bar(60,90,90,90);
bar(90,90,120,90);
bar(120,90,150,90);
//bar(150,90,180,90);
//bar(180,90,210,90);
//bar(210,90,240,90);
bar(240,90,270,90);
bar(270,90,300,90);
bar(300,90,330,90);
bar(330,90,360,90);
bar(360,90,390,90);
//bar(390,90,420,90);
//bar(420,90,450,90);

//4th row
bar(0,120,30,120);
//bar(30,120,60,120);
//bar(60,120,90,120);
//bar(90,120,120,120);
bar(120,120,150,120);
//bar(150,120,180,120);
bar(180,120,210,120);
bar(210,120,240,120);
//bar(240,120,270,120);
//bar(270,120,300,120);
//bar(300,120,330,120);
bar(330,120,360,120);
bar(360,120,390,120);
bar(390,120,420,120);
//bar(420,120,450,120);


//5th row
//bar(0,150,30,150);
//bar(30,150,60,150);
//bar(60,150,90,150);
//bar(90,150,120,150);
bar(120,150,150,150);
bar(150,150,180,150);
//bar(180,150,210,150);
//bar(210,150,240,150);
//bar(240,150,270,150);
//bar(270,150,300,150);
bar(300,150,330,150);
bar(330,150,360,150);
//bar(360,150,390,150);
//bar(390,150,420,150);
bar(420,150,450,150);

//6th row
//bar(0,180,30,180);
bar(30,180,60,180);
//bar(60,180,90,180);
//bar(90,180,120,180);
//bar(120,180,150,180);
bar(150,180,180,180);
//bar(180,180,210,180);
//bar(210,180,240,180);
//bar(240,180,270,180);
bar(270,180,300,180);
//bar(300,180,330,180);
//bar(330,180,360,180);
bar(360,180,390,180);
//bar(390,180,420,180);
//bar(420,180,450,180);


//7th row
//bar(0,210,30,210);
//bar(30,210,60,210);
bar(60,210,90,210);
//bar(90,210,120,210);
//bar(120,210,150,210);
//bar(150,210,180,210);
bar(180,210,210,210);
//bar(210,210,240,210);
//bar(240,210,270,210);
bar(270,210,300,210);
bar(300,210,330,210);
bar(330,210,360,210);
//bar(360,210,390,210);
bar(390,210,420,210);
//bar(420,210,450,210);


//8th row
//bar(0,240,30,240);
bar(30,240,60,240);
bar(60,240,90,240);
bar(90,240,120,240);
//bar(120,240,150,240);
//bar(150,240,180,240);
bar(180,240,210,240);
bar(210,240,240,240);
//bar(240,240,270,240);
bar(270,240,300,240);
//bar(300,240,330,240);
//bar(330,240,360,240);
//bar(360,240,390,240);
//bar(390,240,420,240);
//bar(420,240,450,240);

//9th row
bar(0,270,30,270);
//bar(30,270,60,270);
//bar(60,270,90,270);
bar(90,270,120,270);
//bar(120,270,150,270);
//bar(150,270,180,270);
//bar(180,270,210,270);
//bar(210,270,240,270);
bar(240,270,270,270);
//bar(270,270,300,270);
bar(300,270,330,270);
//bar(330,270,360,270);
bar(360,270,390,270);
//bar(390,270,420,270);
//bar(420,270,450,270);

//10th row
//bar(0,300,30,300);
bar(30,300,60,300);
bar(60,300,90,300);
//bar(90,300,120,300);
//bar(120,300,150,300);
//bar(150,300,180,300);
//bar(180,300,210,300);
//bar(210,300,240,300);
//bar(240,300,270,300);
bar(270,300,300,300);
//bar(300,300,330,300);
bar(330,300,360,300);
//bar(360,300,390,300);
bar(390,300,420,300);
//bar(420,300,450,300);

//11th row
//bar(0,330,30,330);
//bar(30,330,60,330);
bar(60,330,90,330);
bar(90,330,120,330);
//bar(120,330,150,330);
//bar(150,330,180,330);
bar(180,330,210,330);
bar(210,330,240,330);
bar(240,330,270,330);
//bar(270,330,300,330);
bar(300,330,330,330);
//bar(330,330,360,330);
bar(360,330,390,330);
bar(390,330,420,330);
bar(420,330,450,330);

//12th row
//bar(0,360,30,360);
bar(30,360,60,360);
//bar(60,360,90,360);
bar(90,360,120,360);
bar(120,360,150,360);
bar(150,360,180,360);
//bar(180,360,210,360);
//bar(210,360,240,360);
bar(240,360,270,360);
//bar(270,360,300,360);
bar(300,360,330,360);
//bar(330,360,360,360);
//bar(360,360,390,360);
bar(390,360,420,360);
//bar(420,360,450,360);

//13th row
//bar(0,390,30,390);
//bar(30,390,60,390);
bar(60,390,90,390);
//bar(90,390,120,390);
bar(120,390,150,390);
bar(150,390,180,390);
//bar(180,390,210,390);
bar(210,390,240,390);
//bar(240,390,270,390);
//bar(270,390,300,390);
//bar(300,390,330,390);
bar(330,390,360,390);
//bar(360,390,390,390);
bar(390,390,420,390);
//bar(420,390,450,390);

//14th row
//bar(0,420,30,420);
///bar(30,420,60,420);
//bar(60,420,90,420);
bar(90,420,120,420);
//bar(120,420,150,420);
//bar(150,420,180,420);
bar(180,420,210,420);
bar(210,420,240,420);
//bar(240,420,270,420);
//bar(270,420,300,420);
bar(300,420,330,420);
bar(330,420,360,420);
bar(360,420,390,420);
//bar(390,420,420,420);
//bar(420,420,450,420);

//vertical bars
//1st column
//bar(30,3,30,30);
//bar(30,30,30,60);
bar(30,60,30,90);
bar(30,90,30,120);
//bar(30,120,30,150);
bar(30,150,30,180);
bar(30,180,30,210);
bar(30,210,30,240);
//bar(30,240,30,270);
//bar(30,270,30,300);
bar(30,300,30,330);
//bar(30,330,30,360);
bar(30,360,30,390);
bar(30,390,30,420);
//bar(30,420,30,450);

//2nd row
bar(60,3,60,30);
bar(60,30,60,60);
//bar(60,60,60,90);
//bar(60,90,60,120);
bar(60,120,60,150);
bar(60,150,60,180);
//bar(60,180,60,210);
//bar(60,210,60,240);
bar(60,240,60,270);
bar(60,270,60,300);
//bar(60,300,60,330);
bar(60,330,60,360);
bar(60,360,60,390);
bar(60,390,60,420);
bar(60,420,60,450);

//3rd row
//bar(90,3,90,30);
//bar(90,30,90,60);
bar(90,60,90,90);
bar(90,90,90,120);
bar(90,120,90,150);
bar(90,150,90,180);
bar(90,180,90,210);
//bar(90,210,90,240);
//bar(90,240,90,270);
//bar(90,270,90,300);
//bar(90,300,90,330);
//bar(90,330,90,360);
//bar(90,360,90,390);
//bar(90,390,90,420);
//bar(90,420,90,450);
int A=120;

//4th row
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//5th row
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//6th row
bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//7th row
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//8th row
bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//9th row
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//10th row
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//11th row
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//12th row
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//13th row
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//14th row
bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
}
void sound()//to make sound if fruit is eaten
{sound(800);
  delay(100);
  sound(500);
  delay(100);
  nosound();
}
int ball1(int j,int k,int l)   //ball
{
 circle(j,k,l);
 setcolor(WHITE);
 setfillstyle(SOLID_FILL,2);
 floodfill(j,k,WHITE);
 circle(435,435,10);
 //circle(15,45,10);
 if(j==80&&k==100)
  {sound();
  outtextxy(100,460,"Congratulations!");
  ps=ps+50;
  delay(1000);
 
  return 2;
}
  return 9999;
}
void condition1(int *j,int *k)
{
 if(*k==10){if(*j<440 && *j>0)*k+=5;}  //up
if(*j==10){if(*k<440 && *k>0)*j+=5;}       //left
if(*k==440){if(*j<440 && *j>0)*k-=5;}            //down
if(*j==440){if(*k<440 && *k>0)*j-=5;}                  //right
//for horizontal lines
//for 1st row
if(*j>=0&&*j<=40&&*k>=20&&*k<=40 || *j>=80&&*j<=160&&*k>=20&&*k<=40 || *j>=200&&*j<=250&&*k>=20&&*k<=40 || *j>=320&&*j<=460&&*k>=20&&*k<=40)
  {if(*k<=30)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 2nd row
if(*j>=50&&*j<=100&&*k>=50&&*k<=70 || *j>=230&&*j<=340&&*k>=50&&*k<=70 || *j>=380&&*j<=430&&*k>=50&&*k<=70)
   {if(*k<=60)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 3rd row
if(*j>=20&&*j<=70&&*k>=80&&*k<=100 || *j>=80&&*j<=160&&*k>=80&&*k<=100 || *j>=230&&*j<=400&&*k>=80&&*k<=100)
   {if(*k<=90)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 4th row
if(*j>=0&&*j<=40&&*k>=110&&*k<=130 || *j>=110&&*j<=160&&*k>=110&&*k<=130 || *j>=170&&*j<=250&&*k>=110&&*k<=130 || *j>=320&&*j<=430&&*k>=110&&*k<=130)
   {if(*k<=120)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 5th row
if(*j>=110&&*j<=190&&*k>=140&&*k<=160 || *j>=290&&*j<=370&&*k>=140&&*k<=160 || *j>=410&&*j<=460&&*k>=140&&*k<=160)
   {if(*k<=150)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 6th row
if(*j>=20&&*j<=70&&*k>=170&&*k<=190 || *j>=140&&*j<=190&&*k>=170&&*k<=190 || *j>=260&&*j<=310&&*k>=170&&*k<=190 || *j>=350&&*j<=400&&*k>=170&&*k<=190)
   {if(*k<=180)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 7th row
if(*j>=50&&*j<=100&&*k>=200&&*k<=220 || *j>=170&&*j<=220&&*k>=200&&*k<=220 || *j>=260&&*j<=370&&*k>=200&&*k<=220 || *j>=380&&*j<=430&&*k>=200&&*k<=220)
   {if(*k<=210)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 8th row
if(*j>=20&&*j<=130&&*k>=230&&*k<=250 || *j>=170&&*j<=250&&*k>=230&&*k<=250 || *j>=260&&*j<=310&&*k>=230&&*k<=250)
   {if(*k<=240)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 9th row
if(*j>=0&&*j<=40&&*k>=260&&*k<=280 || *j>=80&&*j<=130&&*k>=260&&*k<=280 || *j>=230&&*j<=280&&*k>=260&&*k<=280 || *j>=290&&*j<=340&&*k>=260&&*k<=280 || *j>=350&&*j<=400&&*k>=260&&*k<=280)
   {if(*k<=270)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 10th row
if(*j>=20&&*j<=100&&*k>=290&&*k<=310 || *j>=260&&*j<=310&&*k>=290&&*k<=310 || *j>=320&&*j<=370&&*k>=290&&*k<=310 || *j>=380&&*j<=430&&*k>=290&&*k<=310)
   {if(*k<=300)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 11th row
if(*j>=50&&*j<=130&&*k>=320&&*k<=340 || *j>=170&&*j<=280&&*k>=320&&*k<=340 || *j>=290&&*j<=340&&*k>=320&&*k<=340 || *j>=350&&*j<=460&&*k>=320&&*k<=340)
   {if(*k<=330)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 12th row
if(*j>=20&&*j<=70&&*k>=350&&*k<=370 || *j>=80&&*j<=190&&*k>=350&&*k<=370 || *j>=230&&*j<=280&&*k>=350&&*k<=370 || *j>=290&&*j<=340&&*k>=350&&*k<=370 || *j>=380&&*j<=430&&*k>=350&&*k<=370)
   {if(*k<=360)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 13th row
if(*j>=50&&*j<=100&&*k>=380&&*k<=400 || *j>=110&&*j<=190&&*k>=380&&*k<=400 || *j>=200&&*j<=250&&*k>=380&&*k<=400 || *j>=320&&*j<=370&&*k>=380&&*k<=400 || *j<=380&&*j>=430&&*k>=380&&*k<=400)
   {if(*k<=390)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 14th row
if(*j>=80&&*j<=130&&*k>=410&&*k<=430 || *j>=170&&*j<=250&&*k>=410&&*k<=430 || *j>=290&&*j<=400&&*k>=410&&*k<=430)
   {if(*k<=420)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for vertical line
//1st column
if(*k>=50&&*k<=130&&*j>=20&&*j<=40 || *k>=140&&*k<=250&&*j>=20&&*j<=40 || *k>=290&&*k<=340&&*j>=20&&*j<=40 || *k>=350&&*k<=430&&*j>=20&&*j<=40)
   {if(*j<=30)
    {*j-=5;
     }
     else
      *j+=5;
   }
//2nd column
if(*k>=0&&*k<=70&&*j>=50&&*j<=70 || *k>=110&&*k<=190&&*j>=50&&*j<=70 || *k>=230&&*k<=310&&*j>=50&&*j<=70 || *k>=320&&*k<=460&&*j>=50&&*j<=70)
   {if(*j<=60)
    {*j-=5;
     }
     else
      *j+=5;
   }
//3rd column
if(*k>=50&&*k<=220&&*j>=80&&*j<=100)
   {if(*j<=90)
    {*j-=5;
     }
     else
      *j+=5;
   }
//4th column
if(*k>=20&&*k<=70&&*j>=110&&*j<=130 || *k>=140&&*k<=340&&*j>=110&&*j<=130 || *k>=380&&*k<=430&&*j>=110&&*j<=130)
   {if(*j<=120)
    {*j-=5;
     }
     else
      *j+=5;
   }
//5th column
if(*k>=20&&*k<=70&&*j>=140&&*j<=160 || *k>=110&&*k<=160&&*j>=140&&*j<=160 || *k>=170&&*k<=370&&*j>=140&&*j<=160 || *k>=410&&*k<=460&&*j>=140&&*j<=160)
   {if(*j<=150)
    {*j-=5;
     }
     else
      *j+=5;
   }
//6th column
if(*k>=0&&*k<=70&&*j>=170&&*j<=190 || *k>=80&&*k<=130&&*j>=170&&*j<=190 || *k>=200&&*k<=310&&*j>=170&&*j<=190 || *k>=350&&*k<=430&&*j>=170&&*j<=190)
   {if(*j<=180)
    {*j-=5;
     }
     else
      *j+=5;
   }
//7th column
if(*k>=20&&*k<=100&&*j>=200&&*j<=220 || *k>=110&&*k<=160&&*j>=200&&*j<=220 || *k>=170&&*k<=220&&*j>=200&&*j<=220 || *k>=260&&*k<=400&&*j>=200&&*j<=220)
   {if(*j<=210)
    {*j-=5;
     }
     else
      *j+=5;
   }
//8th column
if(*k>=0&&*k<=70&&*j>=230&&*j<=250 || *k>=80&&*k<=220&&*j>=230&&*j<=250 || *k>=230&&*k<=310&&*j>=230&&*j<=250 || *k>=380&&*k<=430&&*j>=230&&*j<=250)
   {if(*j<=240)
    {*j-=5;
     }
     else
      *j+=5;
   }
//9th column
if(*k>=0&&*k<=40&&*j>=260&&*j<=280 || *k>=110&&*k<=190&&*j>=260&&*j<=280 || *k>=200&&*k<=250&&*j>=260&&*j<=280 || *k>=260&&*k<=340&&*j>=260&&*j<=280 || *k>=350&&*k<=460&&*j>=260&&*j<=280)
   {if(*j<=270)
    {*j-=5;
     }
     else
      *j+=5;
   }
//10th column
if(*k>=20&&*k<=70&&*j>=290&&*j<=310 || *k>=80&&*k<=190&&*j>=290&&*j<=310 || *k>=320&&*k<=430&&*j>=290&&*j<=310)
   {if(*j<=300)
    {*j-=5;
     }
     else
      *j+=5;
   }
//11th column
if(*k>=0&&*k<=40&&*j>=320&&*j<=340 || *k>=170&&*k<=340&&*j>=320&&*j<=340)
   {if(*j<=330)
    {*j-=5;
     }
     else
      *j+=5;
   }
//12th column
if(*k>=20&&*k<=100&&*j>=350&&*j<=370 || *k>=170&&*k<=220&&*j>=350&&*j<=370 || *k>=230&&*k<=280&&*j>=350&&*j<=370 || *k>=290&&*k<=400&&*j>=350&&*j<=370)
   {if(*j<=360)
    {*j-=5;
     }
     else
      *j+=5;
   }
//13th column
if(*k>=140&&*k<=190&&*j>=380&&*j<=400 || *k>=200&&*k<=250&&*j>=380&&*j<=400 || *k>=260&&*k<=310&&*j>=380&&*j<=400 || *k>=380&&*k<=430&&*j>=380&&*j<=400)
   {if(*j<=390)
    {*j-=5;
     }
     else
      *j+=5;
   }
//14th column
if(*k>=0&&*k<=130&&*j>=410&&*j<=430 || *k>=140&&*k<=310&&*j>=410&&*j<=430 || *k>=350&&*k<=400&&*j>=410&&*j<=430 || *k>=410&&*k<=460&&*j>=410&&*j<=430)
   {if(*j<=420)
    {*j-=5;
     }
     else
      *j+=5;
   }

}
int level_1()
{ps=0;
 int i,j=15,k=15,l=10,m=10,co=0,inc=0;
 char c;
 setfillstyle(SOLID_FILL,0);
 bar(0,0,getmaxx(),getmaxy());
 while(1){
 setcolor(13);
 settextstyle(1,HORIZ_DIR,4);
 outtextxy(275,100,"LEVEL 1");
 settextstyle(0,HORIZ_DIR,0);
 setcolor(9);
 outtextxy(215,200,"Press 'ENTER' to play the level.");
 char ch=getch();
 if(ch==13)
  {setfillstyle(SOLID_FILL,0);
    bar(0,0,getmaxx(),getmaxy());
    break;
  }
 getch();
  }
 body1();          //draw the figure
 ball1(j,k,l);     //draw the  ball
countm(&co,&inc);
for(i=0;i<m++;i++)
{condition1(&j,&k); //checking condition
countm(&co,&inc);
 c=getch();
 if(c==75||c=='a') j-=5;
 if(c==80||c=='s') k+=5;
 if(c==77||c=='d') j+=5;
 if(c==72||c=='w') k-=5;
 if(c==27) return 0;
  body1();        //draw the figure
 int v;
 v=ball1(j,k,l);
 if (v==2) return 2;
 }
 return 9999;
}

void body2() //figure
{ setcolor(WHITE);
  setfillstyle(SOLID_FILL,7);
bar(0,0,450,450);
setfillstyle(SOLID_FILL,BLACK);
//next horiz bars
//1st row
//bar(3,30,30,30);
bar(30,30,60,30);
//bar(60,30,90,30);
//bar(90,30,120,30);
bar(120,30,150,30);
bar(150,30,180,30);
//bar(180,30,210,30);
bar(210,30,240,30);
bar(240,30,270,30);
//bar(270,30,300,30);
//bar(300,30,330,30);
//bar(330,30,360,30);
//bar(360,30,390,30);
bar(390,30,420,30);
//bar(420,30,450,30);

//2nd row
//bar(0,60,30,60);
//bar(30,60,60,60);
//bar(60,60,90,60);
bar(90,60,120,60);
bar(120,60,150,60);
//bar(150,60,180,60);
bar(180,60,210,60);
//bar(210,60,240,60);
bar(240,60,270,60);
//bar(270,60,300,60);
//bar(300,60,330,60);
//bar(330,60,360,60);
bar(360,60,390,60);
//bar(390,60,420,60);
bar(420,60,450,60);

//3rd row
//bar(0,90,30,90);
bar(30,90,60,90);
bar(60,90,90,90);
//bar(90,90,120,90);
bar(120,90,150,90);
bar(150,90,180,90);
//bar(180,90,210,90);
bar(210,90,240,90);
bar(240,90,270,90);
bar(270,90,300,90);
bar(300,90,330,90);
bar(330,90,360,90);
bar(360,90,390,90);
//bar(390,90,420,90);
//bar(420,90,450,90);

//4rth row
bar(0,120,30,120);
//bar(30,120,60,120);
//bar(60,120,90,120);
bar(90,120,120,120);
//bar(120,120,150,120);
//bar(150,120,180,120);
//bar(180,120,210,120);
//bar(210,120,240,120);
//bar(240,120,270,120);
bar(270,120,300,120);
bar(300,120,330,120);
bar(330,120,360,120);
//bar(360,120,390,120);
//bar(390,120,420,120);
//bar(420,120,450,120);

//5th row
bar(0,150,30,150);
//bar(30,150,60,150);
//bar(60,150,90,150);
//bar(90,150,120,150);
bar(120,150,150,150);
bar(150,150,180,150);
bar(180,150,210,150);
bar(210,150,240,150);
//bar(240,150,270,150);
//bar(270,150,300,150);
//bar(300,150,330,150);
//bar(330,150,360,150);
//bar(360,150,390,150);
//bar(390,150,420,150);
bar(420,150,450,150);

//6th row
//bar(0,180,30,180);
bar(30,180,60,180);
bar(60,180,90,180);
bar(90,180,120,180);
bar(120,180,150,180);
//bar(150,180,180,180);
//bar(180,180,210,180);
//bar(210,180,240,180);
bar(240,180,270,180);
//bar(270,180,300,180);
//bar(300,180,330,180);
//bar(330,180,360,180);
//bar(360,180,390,180);
bar(390,180,420,180);
bar(420,180,450,180);

//7th row
//bar(0,210,30,210);
//bar(30,210,60,210);
//bar(60,210,90,210);
//bar(90,210,120,210);
bar(120,210,150,210);
bar(150,210,180,210);
bar(180,210,210,210);
bar(210,210,240,210);
//bar(240,210,270,210);
bar(270,210,300,210);
bar(300,210,330,210);
//bar(330,210,360,210);
bar(360,210,390,210);
bar(390,210,420,210);
//bar(420,210,450,210);

//8th row
//bar(0,240,30,240);
//bar(30,240,60,240);
//bar(60,240,90,240);
bar(90,240,120,240);
bar(120,240,150,240);
bar(150,240,180,240);
bar(180,240,210,240);
bar(210,240,240,240);
bar(240,240,270,240);
//bar(270,240,300,240);
//bar(300,240,330,240);
//bar(330,240,360,240);
bar(360,240,390,240);
bar(390,240,420,240);
//bar(420,240,450,240);

//9th row
//bar(0,270,30,270);
bar(30,270,60,270);
//bar(60,270,90,270);
bar(90,270,120,270);
bar(120,270,150,270);
bar(150,270,180,270);
//bar(180,270,210,270);
//bar(210,270,240,270);
bar(240,270,270,270);
//bar(270,270,300,270);
//bar(300,270,330,270);
bar(330,270,360,270);
//bar(360,270,390,270);
//bar(390,270,420,270);
bar(420,270,450,270);

//10th row
//bar(0,300,30,300);
bar(30,300,60,300);
bar(60,300,90,300);
bar(90,300,120,300);
bar(120,300,150,300);
bar(150,300,180,300);
bar(180,300,210,300);
bar(210,300,240,300);
//bar(240,300,270,300);
bar(270,300,300,300);
//bar(300,300,330,300);
//bar(330,300,360,300);
//bar(360,300,390,300);
//bar(390,300,420,300);
bar(420,300,450,300);

//11th row
//bar(0,330,30,330);
//bar(30,330,60,330);
//bar(60,330,90,330);
//bar(90,330,120,330);
//bar(120,330,150,330);
bar(150,330,180,330);
bar(180,330,210,330);
//bar(210,330,240,330);
bar(240,330,270,330);
//bar(270,330,300,330);
//bar(300,330,330,330);
//bar(330,330,360,330);
//bar(360,330,390,330);
//bar(390,330,420,330);
//bar(420,330,450,330);
//12th row
//bar(0,360,30,360);
//bar(30,360,60,360);
//bar(60,360,90,360);
bar(90,360,120,360);
//bar(120,360,150,360);
//bar(150,360,180,360);
bar(180,360,210,360);
bar(210,360,240,360);
//bar(240,360,270,360);
//bar(270,360,300,360);
bar(300,360,330,360);
bar(330,360,360,360);
bar(360,360,390,360);
bar(390,360,420,360);
bar(420,360,450,360);

//13th row
//bar(0,390,30,390);
//bar(30,390,60,390);
//bar(60,390,90,390);
bar(90,390,120,390);
bar(120,390,150,390);
bar(150,390,180,390);
bar(180,390,210,390);
//bar(210,390,240,390);
bar(240,390,270,390);
bar(270,390,300,390);
//bar(300,390,330,390);
bar(330,390,360,390);
bar(360,390,390,390);
bar(390,390,420,390);
//bar(420,390,450,390);

//14th row
//bar(0,420,30,420);
//bar(30,420,60,420);
bar(60,420,90,420);
//bar(90,420,120,420);
//bar(120,420,150,420);
bar(150,420,180,420);
//bar(180,420,210,420);
bar(210,420,240,420);
//bar(240,420,270,420);
//bar(270,420,300,420);
bar(300,420,330,420);
bar(330,420,360,420);
bar(360,420,390,420);
bar(390,420,420,420);
//bar(420,420,450,420);

//vertical bars
//1st column
//bar(30,3,30,30);
bar(30,30,30,60);
bar(30,60,30,90);
//bar(30,90,30,120);
//bar(30,120,30,150);
//bar(30,150,30,180);
bar(30,180,30,210);
bar(30,210,30,240);
bar(30,240,30,270);
//bar(30,270,30,300);
bar(30,300,30,330);
bar(30,330,30,360);
bar(30,360,30,390);
bar(30,390,30,420);
//bar(30,420,30,450);

//2nd column
//bar(60,3,60,30);
bar(60,30,60,60);
//bar(60,60,60,90);
bar(60,90,60,120);
bar(60,120,60,150);
bar(60,150,60,180);
bar(60,180,60,210);
bar(60,210,60,240);
//bar(60,240,60,270);
//bar(60,270,60,300);
//bar(60,300,60,330);
bar(60,330,60,360);
bar(60,360,60,390);
bar(60,390,60,420);
bar(60,420,60,450);

//3rd column
bar(90,3,90,30);
bar(90,30,90,60);
bar(90,60,90,90);
//bar(90,90,90,120);
bar(90,120,90,150);
bar(90,150,90,180);
//bar(90,180,90,210);
bar(90,210,90,240);
//bar(90,240,90,270);
//bar(90,270,90,300);
bar(90,300,90,330);
bar(90,330,90,360);
//bar(90,360,90,390);
//bar(90,390,90,420);
//bar(90,420,90,450);

int A=120;

//4th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//5th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//6th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//7th column
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//8th column
//bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//9th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//10th column
bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//11th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//12th column
bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//13th column
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//14th column
//bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
}

int ball2(int j,int k,int l,int *s)   //ball
{static int f1,f2,f3,f4,f5,f6,f7;//to check if fruit is already eaten
 if(*s==0)//checks if game is just started
   {f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0;
   }
 circle(j,k,l);
 setcolor(WHITE);
 setfillstyle(SOLID_FILL,2);
 floodfill(j,k,WHITE);
 
 if(f1!=1)//checking and creating fruit1
 {circle(15,135,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(15,135,15);
 }
 if(f2!=1)//checking and creating fruit2
 {circle(75,200,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(75,200,15);
 }
 //circle(15,45,10);
 if(f3!=1)//checking and creating fruit3
 {circle(225,110,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,110,15);
 }
 if(f4!=1)//checking and creating fruit4
 {circle(45,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(45,405,15);
 }
 if(f5!=1)//checking and creating fruit5
 {circle(285,285,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(285,285,15);
 }
 if(f6!=1)//checking and creating fruit6
 {circle(375,40,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(375,40,15);
 }
 if(f7!=1)//checking and creating fruit7
 {circle(325,140,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(325,140,15);
 }
 circle(435,165,10);
//{circle(15,35,10);}
 if(j==435&&k==165)
  {sound();
    outtextxy(100,460,"Congratulations!");
delay(1000);

return 3;
}
else if(j==15&&k==135)//condition for fruit1
{if(f1!=1){
  sound();
ps=ps+25;}//increase score
 f1=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==75&&k==200)//condition for fruit2
{if(f2!=1){
  sound();
  ps=ps+25;}//increase score
 f2=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==110)//condition for fruit3
{if(f3!=1){
  sound();
  ps=ps+25;}//increase score
 f3=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==45&&k==405)//condition for fruit4
{if(f4!=1){
  sound();
  ps=ps+25;}//increase score
 f4=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==285&&k==285)//condition for fruit5
{if(f5!=1){
  sound();
  ps=ps+25;}//increase score
 f5=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==375&&k==40)//condition for fruit6
{if(f6!=1){
  sound();
  ps=ps+25;}//increase score
 f6=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==325&&k==140)//condition for fruit7
{if(f7!=1){
  sound();
  ps=ps+25;}//increase score
 f7=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
*s=1;
return 9999;
}
void condition2(int *j,int *k)
{
 if(*k==10){if(*j<440 && *j>0)*k+=5;}  //up
if(*j==10){if(*k<440 && *k>0)*j+=5;}       //left
if(*k==440){if(*j<440 && *j>0)*k-=5;}            //down
if(*j==440){if(*k<440 && *k>0)*j-=5;}                  //right
//now the vertical lines
//for 1st vertical line
if(*k<=95&&*k>=25 &&*j<=40&&*j>=20 || *k<=275&&*k>=175 &&*j<=40&&*j>=20||*k<=430&&*k>=290 &&*j<=40&&*j>=20)
  {if(*j<=35)*j-=10;
  *j+=5;
  }
//2nd vertical line
if(*k<=70&&*k>=25 &&*j<=70&&*j>=50 || *k<=250&&*k>=85 &&*j<=70&&*j>=50||*k<=445&&*k>=325 &&*j<=70&&*j>=50)
  {if(*j<=65)*j-=10;
  *j+=5;
  }
//3rd vertical line
if(*k<=95&&*k>=0 &&*j<=100&&*j>=80 || *k<=185&&*k>=115 &&*j<=100&&*j>=80||*k<=235&&*k>=210 &&*j<=100&&*j>=80||*k<=365&&*k>=295 &&*j<=100&&*j>=80 )
  {if(*j<=95)*j-=10;
  *j+=5;
  }
//4th vLine
if(*k<=215&&*k>=175 &&*j<=130&&*j>=110 ||*k<=365&&*k>=325 &&*j<=130&&*j>=110|| *k<=450&&*k>=385 &&*j<=130&&*j>=110)
  {if(*j<=125)*j-=10;
  *j+=5;
  }
//5th line
if(*k<=155&&*k>=85 &&*j<=160&&*j>=140 || *k<=365&&*k>=295 &&*j<=160&&*j>=140)
  {if(*j<=155)*j-=10;
  *j+=5;
  }
//6th line
if(*k<=125&&*k>=25 &&*j<=190&&*j>=170 || *k<=185&&*k>=145 &&*j<=190&&*j>=170 || *k>=235&&*k<=275&&*j>=170&&*j<=190|| *k<=425&&*k>=350 &&*j<=170&&*j>=190)
  {if(*j<=185)*j-=10;
  *j+=5;
  }

//7th line
if(*k<=35&&*k>=0 &&*j<=220&&*j>=200 || *k<=155&&*k>=85 &&*j<=220&&*j>=200|| *k<=215&&*k>=175 &&*j<=220&&*j>=200|| *k<=305&&*k>=265 &&*j<=220&&*j>=200|| *k<=450&&*k>=415 &&*j<=220&&*j>=200)
  {if(*j<=215)*j-=10;
  *j+=5;
  }
//8th line
if(*k<=125&&*k>=55 &&*j<=250&&*j>=230|| *k<=215&&*k>=175 &&*j<=250&&*j>=230||*k<=275&&*k>=235 &&*j<=250&&*j>=230||*k<=335&&*k>=305 &&*j<=250&&*j>=230||*k<=425&&*k>=385 &&*j<=250&&*j>=230)
  {if(*j<=245)*j-=10;
  *j+=5;
  }
//9th vline
if(*k>=145&&*k<=185&&*j>=260&&*j<=280||*k>=205&&*k<=245&&*j>=260&&*j<=280||*k>=265&&*k<=305&&*j>=260&&*j<=280||*k>=325&&*k<=395&&*j>=260&&*j<=280||*k>=415&&*k<=450&&*j>=260&&*j<=280)
  {if(*j<=275)*j-=10;
  *j+=5;
  }
//10th vline
if(*k>=0&&*k<=65&&*j>=290&&*j<=310||*k>=115&&*k<=215&&*j>=290&&*j<=310||*k>=235&&*k<=365&&*j>=290&&*j<=310||*k>=385&&*k<=425&&*j>=290&&*j<=310)
  {if(*j<=305)*j-=10;
  *j+=5;
  }
//11th vline
if(*k>=25&&*k<=95&&*j>=320&&*j<=340||*k>=145&&*k<=335&&*j>=320&&*j<=340)
  {if(*j<=335)*j-=10;
  *j+=5;
  }
//12th vline
if(*k>=0&&*k<=65&&*j>=350&&*j<=370||*k>=115&&*k<=245&&*j>=350&&*j<=370||*k>=295&&*k<=365&&*j>=350&&*j<=370)
  {if(*j<=365)*j-=10;
  *j+=5;
  }
//13th vline
if(*k>=25&&*k<=65&&*j>=380&&*j<=400||*k>=85&&*k<=185&&*j>=380&&*j<=400||*k>=235&&*k<=335&&*j>=380&&*j<=400)
  {if(*j<=395)*j-=10;
  *j+=5;
  }

//14th vline
if(*k>=55&&*k<=125&&*j>=410&&*j<=430||*k>=325&&*k<=355&&*j>=410&&*j<=430||*k>=385&&*k<=425&&*j>=410&&*j<=430)
  {if(*j<=425)*j-=10;
  *j+=5;
  }
//1st row
if(*j>=25&&*j<=65&&*k>=20&&*k<=40 || *j>=115&&*j<=185&&*k>=20&&*k<=40||*j>=215&&*j<=275&&*k>=20&&*k<=40||*j>=385&&*j<=425&&*k>=20&&*k<=40)
  {if(*k<=30)*k-=10;
   *k+=5;
   }
//2nd row
if(*j>=85&&*j<=155&&*k>=50&&*k<=70 || *j>=175&&*j<=215&&*k>=50&&*k<=70||*j>=235&&*j<=275&&*k>=50&&*k<=70||*j>=355&&*j<=395&&*k>=50&&*k<=70||*j>=415&&*j<=450&&*k>=50&&*k<=70)
  {if(*k<=60)*k-=10;
   *k+=5;
   }
//3rd row
if(*j>=25&&*j<=95&&*k>=80&&*k<=100 ||*j>=115&&*j<=185&&*k>=80&&*k<=100||*j>=205&&*j<=395&&*k>=80&&*k<=100)
  {if(*k<=90)*k-=10;
   *k+=5;
   }
//for 4th row
if(*j>=0&&*j<=35&&*k>=110&&*k<=130 || *j>=85&&*j<=125&&*k>=110&&*k<=130 || *j>=265&&*j<=365&&*k>=110&&*k<=130)
   {if(*k<=120)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 5th row
if(*j>=0&&*j<=35&&*k>=140&&*k<=160 || *j>=115&&*j<=245&&*k>=140&&*k<=160 || *j>=415&&*j<=450&&*k>=140&&*k<=160)
   {if(*k<=150)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 6th row
if(*j>=25&&*j<=155&&*k>=170&&*k<=190 || *j>=235&&*j<=275&&*k>=170&&*k<=190 || *j>=385&&*j<=450&&*k>=170&&*k<=190)
   {if(*k<=180)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 7th row
if(*j>=115&&*j<=245&&*k>=200&&*k<=220 || *j>=265&&*j<=335&&*k>=200&&*k<=220 || *j>=355&&*j<=425&&*k>=200&&*k<=220)
   {if(*k<=210)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 8th row
if(*j>=85&&*j<=275&&*k>=230&&*k<=250 || *j>=355&&*j<=425&&*k>=230&&*k<=250)
   {if(*k<=240)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 9th row
if(*j>=25&&*j<=65&&*k>=260&&*k<=280 || *j>=85&&*j<=185&&*k>=260&&*k<=280 || *j>=235&&*j<=275&&*k>=260&&*k<=280||*j>=325&&*j<=365&&*k>=260&&*k<=280||*j>=415&&*j<=455&&*k>=260&&*k<=280)
   {if(*k<=270)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 10th row
if(*j>=25&&*j<=245&&*k>=290&&*k<=310 || *j>=265&&*j<=305&&*k>=290&&*k<=310 || *j>=415&&*j<=450&&*k>=290&&*k<=310)
   {if(*k<=300)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 11th row
if(*j>=145&&*j<=215&&*k>=320&&*k<=340 || *j>=235&&*j<=275&&*k>=320&&*k<=340)
   {if(*k<=330)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 12th row
if(*j>=85&&*j<=125&&*k>=350&&*k<=370 || *j>=175&&*j<=245&&*k>=350&&*k<=370 || *j>=295&&*j<=450&&*k>=350&&*k<=370)
   {if(*k<=360)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 13th row
if(*j>=85&&*j<=215&&*k>=380&&*k<=400 || *j>=235&&*j<=305&&*k>=380&&*k<=400 || *j>=325&&*j<=425&&*k>=380&&*k<=400)
   {if(*k<=390)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 14th row
if(*j>=55&&*j<=95&&*k>=410&&*k<=430 || *j>=145&&*j<=185&&*k>=410&&*k<=430 || *j>=205&&*j<=245&&*k>=410&&*k<=430||*j>=295&&*j<=425&&*k>=410&&*k<=430)
   {if(*k<=420)
    {*k-=5;
     }
     else
      *k+=5;
   }
}
int level_2()
{
 int i,j=15,k=15,l=10,m=10,co=0,inc=0,s=0;
 char c;
 loading();
 while(1)
 {setcolor(13);
 settextstyle(1,HORIZ_DIR,4);
 outtextxy(275,100,"LEVEL 2");
 settextstyle(0,HORIZ_DIR,0);
 setcolor(9);
 outtextxy(215,200,"Press 'ENTER' to play the level.");
 char ch=getch();
 if(ch==13)
  {setfillstyle(SOLID_FILL,0);
    bar(0,0,getmaxx(),getmaxy());
    break;
  }
 getch();
  }
 body2();          //draw the figure
 ball2(j,k,l,&s);     //draw the  ball

 countm(&co,&inc);

for(i=0;i<m++;i++)
{condition2(&j,&k); //cheacking condition
 countm(&co,&inc);
 c=getch();
 if(c==75||c=='a') j-=5;
 if(c==80||c=='s') k+=5;
 if(c==77||c=='d') j+=5;
 if(c==72||c=='w') k-=5;
 if(c==27) return 0;
  body2();        //draw the figure
 int v;
 v=ball2(j,k,l,&s);
 if (v==3) return 3;
 }
 return 9999; //draw the ball
}
void body3() //figure
{setcolor(WHITE);
  setfillstyle(SOLID_FILL,7);
bar(3,3,450,450);
setfillstyle(SOLID_FILL,BLACK);
//next horiz bars
//1st row
//bar(3,30,30,30);
//bar(30,30,60,30);
bar(60,30,90,30);
bar(90,30,120,30);
bar(120,30,150,30);
bar(150,30,180,30);
//bar(180,30,210,30);
bar(210,30,240,30);
bar(240,30,270,30);
bar(270,30,300,30);
//bar(300,30,330,30);
bar(330,30,360,30);
//bar(360,30,390,30);
//bar(390,30,420,30);
bar(420,30,450,30);

//2nd row
//bar(0,60,30,60);
bar(30,60,60,60);
bar(60,60,90,60);
bar(90,60,120,60);
bar(120,60,150,60);
bar(150,60,180,60);
//bar(180,60,210,60);
//bar(210,60,240,60);
//bar(240,60,270,60);
//bar(270,60,300,60);
bar(300,60,330,60);
bar(330,60,360,60);
bar(360,60,390,60);
bar(390,60,420,60);
//bar(420,60,450,60);

//3rd row
//bar(0,90,30,90);
bar(30,90,60,90);
bar(60,90,90,90);
bar(90,90,120,90);
//bar(120,90,150,90);
bar(150,90,180,90);
bar(180,90,210,90);
//bar(210,90,240,90);
bar(240,90,270,90);
bar(270,90,300,90);
bar(300,90,330,90);
bar(330,90,360,90);
//bar(360,90,390,90);
//bar(390,90,420,90);
bar(420,90,450,90);

//4rth row
//bar(0,120,30,120);
//bar(30,120,60,120);
//bar(60,120,90,120);
bar(90,120,120,120);
bar(120,120,150,120);
//bar(150,120,180,120);
//bar(180,120,210,120);
bar(210,120,240,120);
//bar(240,120,270,120);
bar(270,120,300,120);
//bar(300,120,330,120);
//bar(330,120,360,120);
bar(360,120,390,120);
bar(390,120,420,120);
//bar(420,120,450,120);

//5th row
//bar(0,150,30,150);
//bar(30,150,60,150);
bar(60,150,90,150);
bar(90,150,120,150);
bar(120,150,150,150);
bar(150,150,180,150);
bar(180,150,210,150);
bar(210,150,240,150);
bar(240,150,270,150);
//bar(270,150,300,150);
bar(300,150,330,150);
bar(330,150,360,150);
//bar(360,150,390,150);
bar(390,150,420,150);
//bar(420,150,450,150);

//6th row
//bar(0,180,30,180);
bar(30,180,60,180);
//bar(60,180,90,180);
//bar(90,180,120,180);
//bar(120,180,150,180);
bar(150,180,180,180);
bar(180,180,210,180);
//bar(210,180,240,180);
//bar(240,180,270,180);
bar(270,180,300,180);
//bar(300,180,330,180);
//bar(330,180,360,180);
bar(360,180,390,180);
//bar(390,180,420,180);
//bar(420,180,450,180);

//7th row
//bar(0,210,30,210);
//bar(30,210,60,210);
bar(60,210,90,210);
bar(90,210,120,210);
bar(120,210,150,210);
bar(150,210,180,210);
bar(180,210,210,210);
//bar(210,210,240,210);
//bar(240,210,270,210);
//bar(270,210,300,210);
//bar(300,210,330,210);
bar(330,210,360,210);
//bar(360,210,390,210);
//bar(390,210,420,210);
//bar(420,210,450,210);

//8th row
//bar(0,240,30,240);
bar(30,240,60,240);
bar(60,240,90,240);
bar(90,240,120,240);
bar(120,240,150,240);
bar(150,240,180,240);
//bar(180,240,210,240);
//bar(210,240,240,240);
//bar(240,240,270,240);
bar(270,240,300,240);
bar(300,240,330,240);
//bar(330,240,360,240);
bar(360,240,390,240);
bar(390,240,420,240);
bar(420,240,450,240);

//9th row
bar(0,270,30,270);
bar(30,270,60,270);
bar(60,270,90,270);
//bar(90,270,120,270);
//bar(120,270,150,270);
//bar(150,270,180,270);
bar(180,270,210,270);
//bar(210,270,240,270);
bar(240,270,270,270);
bar(270,270,300,270);
bar(300,270,330,270);
bar(330,270,360,270);
bar(360,270,390,270);
bar(390,270,420,270);
//bar(420,270,450,270);

//10th row
//bar(0,300,30,300);
bar(30,300,60,300);
//bar(60,300,90,300);
//bar(90,300,120,300);
//bar(120,300,150,300);
bar(150,300,180,300);
bar(180,300,210,300);
//bar(210,300,240,300);
//bar(240,300,270,300);
//bar(270,300,300,300);
//bar(300,300,330,300);
bar(330,300,360,300);
//bar(360,300,390,300);
//bar(390,300,420,300);
//bar(420,300,450,300);

//11th row
//bar(0,330,30,330);
bar(30,330,60,330);
bar(60,330,90,330);
bar(90,330,120,330);
bar(120,330,150,330);
bar(150,330,180,330);
//bar(180,330,210,330);
bar(210,330,240,330);
//bar(240,330,270,330);
bar(270,330,300,330);
bar(300,330,330,330);
bar(330,330,360,330);
bar(360,330,390,330);
bar(390,330,420,330);
//bar(420,330,450,330);

//12th row
//bar(0,360,30,360);
//bar(30,360,60,360);
bar(60,360,90,360);
//bar(90,360,120,360);
bar(120,360,150,360);
//bar(150,360,180,360);
bar(180,360,210,360);
bar(210,360,240,360);
bar(240,360,270,360);
bar(270,360,300,360);
bar(300,360,330,360);
//bar(330,360,360,360);
bar(360,360,390,360);
bar(390,360,420,360);
bar(420,360,450,360);

//13th row
//bar(0,390,30,390);
bar(30,390,60,390);
bar(60,390,90,390);
//bar(90,390,120,390);
//bar(120,390,150,390);
bar(150,390,180,390);
bar(180,390,210,390);
//bar(210,390,240,390);
bar(240,390,270,390);
//bar(270,390,300,390);
bar(300,390,330,390);
bar(330,390,360,390);
//bar(360,390,390,390);
bar(390,390,420,390);
//bar(420,390,450,390);

//14th row
bar(0,420,30,420);
//bar(30,420,60,420);
//bar(60,420,90,420);
bar(90,420,120,420);
bar(120,420,150,420);
bar(150,420,180,420);
//bar(180,420,210,420);
bar(210,420,240,420);
//bar(240,420,270,420);
bar(270,420,300,420);
//bar(300,420,330,420);
//bar(330,420,360,420);
bar(360,420,390,420);
//bar(390,420,420,420);
//bar(420,420,450,420);

//vertical bars
//1st column
bar(30,3,30,30);
bar(30,30,30,60);
//bar(30,60,30,90);
bar(30,90,30,120);
bar(30,120,30,150);
bar(30,150,30,180);
//bar(30,180,30,210);
bar(30,210,30,240);
//bar(30,240,30,270);
//bar(30,270,30,300);
bar(30,300,30,330);
bar(30,330,30,360);
bar(30,360,30,390);
//bar(30,390,30,420);
//bar(30,420,30,450);

//2nd column
//bar(60,3,60,30);
//bar(60,30,60,60);
//bar(60,60,60,90);
//bar(60,90,60,120);
bar(60,120,60,150);
//bar(60,150,60,180);
bar(60,180,60,210);
//bar(60,210,60,240);
//bar(60,240,60,270);
//bar(60,270,60,300);
//bar(60,300,60,330);
//bar(60,330,60,360);
//bar(60,360,60,390);
//bar(60,390,60,420);
bar(60,420,60,450);

//3rd column
//bar(90,3,90,30);
//bar(90,30,90,60);
//bar(90,60,90,90);
bar(90,90,90,120);
//bar(90,120,90,150);
bar(90,150,90,180);
//bar(90,180,90,210);
//bar(90,210,90,240);
//bar(90,240,90,270);
bar(90,270,90,300);
//bar(90,300,90,330);
//bar(90,330,90,360);
bar(90,360,90,390);
bar(90,390,90,420);
//bar(90,420,90,450);

int A=120;

//4th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//5th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//6th column
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//7th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//8th column
//bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//9th column
//bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//10th column
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//11th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//12th column
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//13th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//14th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
}

int ball3(int j,int k,int l,int *s)   //ball
{static int f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11;//to recheck if fruit is already eaten
 if(*s==0)//checks if game is just started
    {f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0,f8=0,f9=0,f10=0,f11=0;
    }
 circle(j,k,l);
 setcolor(WHITE);
 setfillstyle(SOLID_FILL,2);
 floodfill(j,k,WHITE);

 if(f1!=1)//checking and creating fruit1
 {circle(185,75,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(185,75,15);
 }
 if(f2!=1)//checking and creating fruit2
 {circle(75,195,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(75,195,15);
 }
 //circle(15,45,10);
 if(f3!=1)//checking and creating fruit3
 {circle(105,300,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(105,300,15);
 }
 if(f4!=1)//checking and creating fruit4
 {circle(285,315,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(285,315,15);
 }
 if(f5!=1)//checking and creating fruit5
 {circle(265,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(265,405,15);
 }
 if(f6!=1)//checking and creating fruit6
 {circle(375,85,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(375,85,15);
 }
 if(f7!=1)//checking and creating fruit7
 {circle(195,255,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(195,255,15);
 }
 if(f8!=1)//checking and creating fruit8
 {circle(255,175,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(255,175,15);
 }
 if(f9!=1)//checking and creating fruit9
 {circle(345,175,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(345,175,15);
 }
 if(f10!=1)//checking and creating fruit10
 {circle(225,345,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,345,15);
 }
 if(f11!=1)//checking and creating fruit11
 {circle(315,125,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(315,125,15);
 }

circle(225,435,10);
 //{circle(40,45,10);}
 if(j==225&&k==435)
  {sound();
    outtextxy(100,460,"Congratulations!");
delay(1000);

return 4;
}
else if(j==185&&k==75)//condition for fruit1
{if(f1!=1){
  sound();
  ps=ps+25;}
 f1=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==75&&k==195)//condition for fruit2
{if(f2!=1){
  sound();
ps=ps+25;}
 f2=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==105&&k==300)//condition for fruit3
{if(f3!=1){
  sound();
ps=ps+25;}
 f3=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==285&&k==315)//condition for fruit4
{if(f4!=1){
  sound();
ps=ps+25;}
 f4=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==265&&k==405)//condition for fruit5
{if(f5!=1){
  sound();
ps=ps+25;}
 f5=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==375&&k==85)//condition for fruit6
{if(f6!=1){
  sound();
ps=ps+25;}
 f6=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==195&&k==255)//condition for fruit7
{if(f7!=1){
  sound();
ps=ps+25;}
 f7=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==255&&k==175)//condition for fruit8
{if(f8!=1){
  sound();
ps=ps+25;}
 f8=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==345&&k==175)//condition for fruit9
{if(f9!=1){
  sound();
ps=ps+25;}
 f9=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==345)//condition for fruit10
{if(f10!=1){
  sound();
ps=ps+25;}
 f10=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==315&&k==125)//condition for fruit11
{if(f11!=1){
  sound();
ps=ps+25;}
 f11=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
*s=1;
return 9999;
}
void condition3(int *j,int *k)
{
 if(*k==10){if(*j<440 && *j>0)*k+=5;}  //up
if(*j==10){if(*k<440 && *k>0)*j+=5;}       //left
if(*k==440){if(*j<440 && *j>0)*k-=5;}            //down
if(*j==440){if(*k<440 && *k>0)*j-=5;}                  //right
//for horizontal lines
//for 1st row
if(*j>=50&&*j<=190&&*k>=20&&*k<=40 || *j>=200&&*j<=310&&*k>=20&&*k<=40 || *j>=320&&*j<=370&&*k>=20&&*k<=40 || *j>=410&&*j<=460&&*k>=20&&*k<=40)
  {if(*k<=30)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 2nd row
if(*j>=20&&*j<=190&&*k>=50&&*k<=70 || *j>=290&&*j<=430&&*k>=50&&*k<=70)
   {if(*k<=60)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 3rd row
if(*j>=20&&*j<=130&&*k>=80&&*k<=100 || *j>=140&&*j<=220&&*k>=80&&*k<=100 || *j>=230&&*j<=370&&*k>=80&&*k<=100 || *j>=410&&*j<=460&&*k>=80&&*k<=100)
   {if(*k<=90)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 4th row
if(*j>=80&&*j<=160&&*k>=110&&*k<=130 || *j>=200&&*j<=250&&*k>=110&&*k<=130 || *j>=260&&*j<=310&&*k>=110&&*k<=130 || *j>=350&&*j<=430&&*k>=110&&*k<=130)
   {if(*k<=120)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 5th row
if(*j>=50&&*j<=280&&*k>=140&&*k<=160 || *j>=290&&*j<=370&&*k>=140&&*k<=160 || *j>=380&&*j<=430&&*k>=140&&*k<=160)
   {if(*k<=150)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 6th row
if(*j>=20&&*j<=70&&*k>=170&&*k<=190 || *j>=140&&*j<=220&&*k>=170&&*k<=190 || *j>=260&&*j<=310&&*k>=170&&*k<=190 || *j>=350&&*j<=400&&*k>=170&&*k<=190)
   {if(*k<=180)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 7th row
if(*j>=50&&*j<=220&&*k>=200&&*k<=220 || *j>=320&&*j<=370&&*k>=200&&*k<=220)
   {if(*k<=210)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 8th row
if(*j>=20&&*j<=190&&*k>=230&&*k<=250 || *j>=260&&*j<=340&&*k>=230&&*k<=250 || *j>=350&&*j<=460&&*k>=230&&*k<=250)
   {if(*k<=240)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 9th row
if(*j>=0&&*j<=100&&*k>=260&&*k<=280 || *j>=170&&*j<=220&&*k>=260&&*k<=280 || *j>=230&&*j<=430&&*k>=260&&*k<=280)
   {if(*k<=270)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 10th row
if(*j>=20&&*j<=70&&*k>=290&&*k<=310 || *j>=140&&*j<=220&&*k>=290&&*k<=310 || *j>=320&&*j<=370&&*k>=290&&*k<=310)
   {if(*k<=300)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 11th row
if(*j>=20&&*j<=190&&*k>=320&&*k<=340 || *j>=200&&*j<=250&&*k>=320&&*k<=340 || *j>=260&&*j<=430&&*k>=320&&*k<=340)
   {if(*k<=330)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 12th row
if(*j>=50&&*j<=100&&*k>=350&&*k<=370 || *j>=110&&*j<=160&&*k>=350&&*k<=370 || *j>=170&&*j<=340&&*k>=350&&*k<=370 || *j>=350&&*j<=460&&*k>=350&&*k<=370)
   {if(*k<=360)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 13th row
if(*j>=20&&*j<=100&&*k>=380&&*k<=400 || *j>=140&&*j<=220&&*k>=380&&*k<=400 || *j>=230&&*j<=280&&*k>=380&&*k<=400 || *j>=290&&*j<=370&&*k>=380&&*k<=400 || *j<=380&&*j>=430&&*k>=380&&*k<=400)
   {if(*k<=390)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 14th row
if(*j>=0&&*j<=40&&*k>=410&&*k<=430 || *j>=80&&*j<=190&&*k>=410&&*k<=430 || *j>=200&&*j<=250&&*k>=410&&*k<=430 || *j>=260&&*j<=310&&*k>=410&&*k<=430 || *j<=350&&*j>=400&&*k>=410&&*k<=430)
   {if(*k<=420)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for vertical line
//1st column
if(*k>=0&&*k<=70&&*j>=20&&*j<=40 || *k>=80&&*k<=190&&*j>=20&&*j<=40 || *k>=200&&*k<=250&&*j>=20&&*j<=40 || *k>=290&&*k<=400&&*j>=20&&*j<=40)
   {if(*j<=30)
    {*j-=5;
     }
     else
      *j+=5;
   }
//2nd column
if(*k>=110&&*k<=160&&*j>=50&&*j<=70 || *k>=170&&*k<=220&&*j>=50&&*j<=70 || *k>=410&&*k<=460&&*j>=50&&*j<=70)
   {if(*j<=60)
    {*j-=5;
     }
     else
      *j+=5;
   }
//3rd column
if(*k>=80&&*k<=130&&*j>=80&&*j<=100 || *k>=140&&*k<=190&&*j>=80&&*j<=100 || *k>=260&&*k<=310&&*j>=80&&*j<=100 || *k>=350&&*k<=430&&*j>=80&&*j<=100)
   {if(*j<=90)
    {*j-=5;
     }
     else
      *j+=5;
   }
//4th column
if(*k>=170&&*k<=220&&*j>=110&&*j<=130 || *k>=230&&*k<=280&&*j>=110&&*j<=130 || *k>=290&&*k<=340&&*j>=110&&*j<=130 || *k>=380&&*k<=430&&*j>=110&&*j<=130)
   {if(*j<=120)
    {*j-=5;
     }
     else
      *j+=5;
   }
//5th column
if(*k>=80&&*k<=130&&*j>=140&&*j<=160 || *k>=140&&*k<=190&&*j>=140&&*j<=160 || *k>=260&&*k<=310&&*j>=140&&*j<=160 || *k>=350&&*k<=400&&*j>=140&&*j<=160)
   {if(*j<=150)
    {*j-=5;
     }
     else
      *j+=5;
   }
//6th column
if(*k>=20&&*k<=70&&*j>=170&&*j<=190 || *k>=110&&*k<=160&&*j>=170&&*j<=190 || *k>=230&&*k<=280&&*j>=170&&*j<=190 || *k>=290&&*k<=370&&*j>=170&&*j<=190)
   {if(*j<=180)
    {*j-=5;
     }
     else
      *j+=5;
   }
//7th column
if(*k>=20&&*k<=130&&*j>=200&&*j<=220 || *k>=200&&*k<=250&&*j>=200&&*j<=220 || *k>=260&&*k<=310&&*j>=200&&*j<=220 || *k>=380&&*k<=460&&*j>=200&&*j<=220)
   {if(*j<=210)
    {*j-=5;
     }
     else
      *j+=5;
   }
//8th column
if(*k>=50&&*k<=130&&*j>=230&&*j<=250 || *k>=140&&*k<=220&&*j>=230&&*j<=250 || *k>=230&&*k<=370&&*j>=230&&*j<=250 || *k>=380&&*k<=430&&*j>=230&&*j<=250)
   {if(*j<=240)
    {*j-=5;
     }
     else
      *j+=5;
   }
//9th column
if(*k>=50&&*k<=100&&*j>=260&&*j<=280 || *k>=110&&*k<=190&&*j>=260&&*j<=280 || *k>=200&&*k<=250&&*j>=260&&*j<=280 || *k>=290&&*k<=340&&*j>=260&&*j<=280 || *k>=350&&*k<=400&&*j>=260&&*j<=280 || *k>=410&&*k<=460&&*j>=260&&*j<=280)
   {if(*j<=270)
    {*j-=5;
     }
     else
      *j+=5;
   }
//10th column
if(*k>=20&&*k<=70&&*j>=290&&*j<=310 || *k>=170&&*k<=250&&*j>=290&&*j<=310 || *k>=260&&*k<=310&&*j>=290&&*j<=310 || *k>=380&&*k<=430&&*j>=290&&*j<=310)
   {if(*j<=300)
    {*j-=5;
     }
     else
      *j+=5;
   }
//11th column
if(*k>=80&&*k<=220&&*j>=320&&*j<=340 || *k>=230&&*k<=280&&*j>=320&&*j<=340 || *k>=410&&*k<=460&&*j>=320&&*j<=340)
   {if(*j<=330)
    {*j-=5;
     }
     else
      *j+=5;
   }
//12th column
if(*k>=0&&*k<=40&&*j>=350&&*j<=370 || *k>=110&&*k<=160&&*j>=350&&*j<=370 || *k>=200&&*k<=250&&*j>=350&&*j<=370 || *k>=290&&*k<=370&&*j>=350&&*j<=370 || *k>=380&&*k<=430&&*j>=350&&*j<=370)
   {if(*j<=360)
    {*j-=5;
     }
     else
      *j+=5;
   }
//13th column
if(*k>=20&&*k<=100&&*j>=380&&*j<=400 || *k>=140&&*k<=220&&*j>=380&&*j<=400 || *k>=260&&*k<=310&&*j>=380&&*j<=400 || *k>=350&&*k<=400&&*j>=380&&*j<=400)
   {if(*j<=390)
    {*j-=5;
     }
     else
      *j+=5;
   }
//14th column
if(*k>=110&&*k<=160&&*j>=410&&*j<=430 || *k>=170&&*k<=250&&*j>=410&&*j<=430 || *k>=260&&*k<=310&&*j>=410&&*j<=430 || *k>=380&&*k<=430&&*j>=410&&*j<=430)
   {if(*j<=420)
    {*j-=5;
     }
     else
      *j+=5;
   }

}
void drawbot(float x,float y)
{setcolor(RED);
  circle(x,y,10);
}
float collision(int x1,int y1,float x2,float y2)
{
  float xdist,ydist;
  xdist=x2-x1;
  ydist=y2-y1;
  float Res;
  Res=sqrt(pow(xdist,2)+pow(ydist,2)); //distance between bot and player finding hypotenuse!-10 cuz it was overlapping!
  return(Res);
}

int level_3()
{
  int i,j=15,k=15,l=10,m=10,co=0,inc=0,s=0;
 char c;
 int a=15,d=225,f=435,vx=435,hy=15,CR,CR1,CR2,CR3,CR4;//vertical bot 1st and then horizontal bot
 float b=135,e=165,g=105,vy=255,hx=45,hxspd=2.0,bspeed=2.0,espeed=2.0,gspeed=2.0,vyspeed=2.0;
 loading();
 while(1)
 {setcolor(13);
 settextstyle(1,HORIZ_DIR,4);
 outtextxy(275,100,"LEVEL 3");
 settextstyle(0,HORIZ_DIR,0);
 setcolor(9);
 outtextxy(215,200,"Press 'ENTER' to play the level.");
 char ch=getch();
 if(ch==13)
  {setfillstyle(SOLID_FILL,0);
    bar(0,0,getmaxx(),getmaxy());
    break;
  }
 getch();
  }
 body3();          //draw the figure
 ball3(j,k,l,&s);     //draw the  ball
 countm(&co,&inc);
for(i=0;i<m++;i++)
{while(1){
body3();          //draw the figure
ball3(j,k,l,&s);     //draw the  ball
drawbot(a,b);   //draw bot
drawbot(d,e);
drawbot(f,g);
drawbot(vx,vy);
drawbot(hx,hy);
b=b+bspeed;      //bot movement speed
e=e+espeed;
g=g+gspeed;
vy=vy+vyspeed;
hx=hx+hxspd;
if(b<135||b>255)
{bspeed=bspeed*-1;
}
if(e<165||e>315)
{espeed=espeed*-1;
}
if(g<105||g>225)
{gspeed=gspeed*-1;
}
if(vy<255||vy>345)
{vyspeed=vyspeed*-1;
}
if(hx<45||hx>345)
{hxspd=hxspd*-1;
}
delay(20);       //delay is making laggy
CR=collision(j,k,a,b);  //collision test with coordinate of bot and player
CR1=collision(j,k,d,e);
CR2=collision(j,k,f,g);
CR3=collision(j,k,vx,vy);
CR4=collision(j,k,hx,hy);
if(CR==10||CR1==10||CR2==10||CR3==10||CR4==10)          //10 being the distance between player and bot centers they collide!
  {cleardevice();
  gameover();
  return 9999;}
if(kbhit())break;
}
condition3(&j,&k); //cheacking condition
 countm(&co,&inc);
 c=getch();
 if(c==75||c=='a') j-=5;
 if(c==80||c=='s') k+=5;
 if(c==77||c=='d') j+=5;
 if(c==72||c=='w') k-=5;
 if(c==27) return 0;
  body3();        //draw the figure
 int v;
 v=ball3(j,k,l,&s);
 if (v==4) return 4;
 }
 return 9999; //draw the ball
  }

void body4() //figure
{setcolor(WHITE);
  setfillstyle(SOLID_FILL,7);
bar(3,3,450,450);
setfillstyle(SOLID_FILL,BLACK);
//next horiz bars
//1st row
//bar(3,30,30,30);
//bar(30,30,60,30);
//bar(60,30,90,30);
bar(90,30,120,30);
bar(120,30,150,30);
bar(150,30,180,30);
//bar(180,30,210,30);
//bar(210,30,240,30);
//bar(240,30,270,30);
//bar(270,30,300,30);
//bar(300,30,330,30);
bar(330,30,360,30);
//bar(360,30,390,30);
//bar(390,30,420,30);
//bar(420,30,450,30);

//2nd row
bar(0,60,30,60);
bar(30,60,60,60);
//bar(60,60,90,60);
bar(90,60,120,60);
//bar(120,60,150,60);
bar(150,60,180,60);
bar(180,60,210,60);
bar(210,60,240,60);
bar(240,60,270,60);
bar(270,60,300,60);
bar(300,60,330,60);
//bar(330,60,360,60);
bar(360,60,390,60);
//bar(390,60,420,60);
bar(420,60,450,60);

//3rd row
//bar(0,90,30,90);
//bar(30,90,60,90);
//bar(60,90,90,90);
//bar(90,90,120,90);
//bar(120,90,150,90);
//bar(150,90,180,90);
bar(180,90,210,90);
bar(210,90,240,90);
bar(240,90,270,90);
//bar(270,90,300,90);
//bar(300,90,330,90);
bar(330,90,360,90);
//bar(360,90,390,90);
//bar(390,90,420,90);
//bar(420,90,450,90);

//4rth row
bar(0,120,30,120);
bar(30,120,60,120);
//bar(60,120,90,120);
bar(90,120,120,120);
bar(120,120,150,120);
bar(150,120,180,120);
//bar(180,120,210,120);
//bar(210,120,240,120);
bar(240,120,270,120);
//bar(270,120,300,120);
//bar(300,120,330,120);
bar(330,120,360,120);
//bar(360,120,390,120);
//bar(390,120,420,120);
bar(420,120,450,120);

//5th row
//bar(0,150,30,150);
bar(30,150,60,150);
//bar(60,150,90,150);
//bar(90,150,120,150);
//bar(120,150,150,150);
//bar(150,150,180,150);
//bar(180,150,210,150);
//bar(210,150,240,150);
//bar(240,150,270,150);
bar(270,150,300,150);
//bar(300,150,330,150);
bar(330,150,360,150);
bar(360,150,390,150);
//bar(390,150,420,150);
//bar(420,150,450,150);

//6th row
//bar(0,180,30,180);
//bar(30,180,60,180);
bar(60,180,90,180);
//bar(90,180,120,180);
bar(120,180,150,180);
bar(150,180,180,180);
bar(180,180,210,180);
bar(210,180,240,180);
//bar(240,180,270,180);
//bar(270,180,300,180);
//bar(300,180,330,180);
bar(330,180,360,180);
//bar(360,180,390,180);
//bar(390,180,420,180);
//bar(420,180,450,180);

//7th row
//bar(0,210,30,210);
bar(30,210,60,210);
//bar(60,210,90,210);
bar(90,210,120,210);
//bar(120,210,150,210);
//bar(150,210,180,210);
//bar(180,210,210,210);
//bar(210,210,240,210);
//bar(240,210,270,210);
//bar(270,210,300,210);
bar(300,210,330,210);
//bar(330,210,360,210);
//bar(360,210,390,210);
//bar(390,210,420,210);
bar(420,210,450,210);

//8th row
bar(0,240,30,240);
//bar(30,240,60,240);
bar(60,240,90,240);
//bar(90,240,120,240);
bar(120,240,150,240);
bar(150,240,180,240);
//bar(180,240,210,240);
bar(210,240,240,240);
bar(240,240,270,240);
bar(270,240,300,240);
//bar(300,240,330,240);
//bar(330,240,360,240);
bar(360,240,390,240);
bar(390,240,420,240);
//bar(420,240,450,240);

//9th row
//bar(0,270,30,270);
//bar(30,270,60,270);
bar(60,270,90,270);
bar(90,270,120,270);
//bar(120,270,150,270);
//bar(150,270,180,270);
bar(180,270,210,270);
//bar(210,270,240,270);
//bar(240,270,270,270);
bar(270,270,300,270);
bar(300,270,330,270);
bar(330,270,360,270);
//bar(360,270,390,270);
//bar(390,270,420,270);
//bar(420,270,450,270);

//10th row
//bar(0,300,30,300);
bar(30,300,60,300);
//bar(60,300,90,300);
bar(90,300,120,300);
//bar(120,300,150,300);
//bar(150,300,180,300);
bar(180,300,210,300);
bar(210,300,240,300);
bar(240,300,270,300);
//bar(270,300,300,300);
//bar(300,300,330,300);
//bar(330,300,360,300);
bar(360,300,390,300);
bar(390,300,420,300);
bar(420,300,450,300);

//11th row
//bar(0,330,30,330);
bar(30,330,60,330);
bar(60,330,90,330);
//bar(90,330,120,330);
//bar(120,330,150,330);
bar(150,330,180,330);
//bar(180,330,210,330);
//bar(210,330,240,330);
//bar(240,330,270,330);
bar(270,330,300,330);
//bar(300,330,330,330);
bar(330,330,360,330);
//bar(360,330,390,330);
//bar(390,330,420,330);
//bar(420,330,450,330);

//12th row
//bar(0,360,30,360);
//bar(30,360,60,360);
bar(60,360,90,360);
bar(90,360,120,360);
bar(120,360,150,360);
//bar(150,360,180,360);
bar(180,360,210,360);
//bar(210,360,240,360);
//bar(240,360,270,360);
//bar(270,360,300,360);
bar(300,360,330,360);
//bar(330,360,360,360);
//bar(360,360,390,360);
//bar(390,360,420,360);
bar(420,360,450,360);

//13th row
//bar(0,390,30,390);
bar(30,390,60,390);
bar(60,390,90,390);
bar(90,390,120,390);
//bar(120,390,150,390);
//bar(150,390,180,390);
//bar(180,390,210,390);
bar(210,390,240,390);
//bar(240,390,270,390);
bar(270,390,300,390);
//bar(300,390,330,390);
//bar(330,390,360,390);
//bar(360,390,390,390);
bar(390,390,420,390);
//bar(420,390,450,390);

//14th row
//bar(0,420,30,420);
//bar(30,420,60,420);
bar(60,420,90,420);
bar(90,420,120,420);
//bar(120,420,150,420);
bar(150,420,180,420);
//bar(180,420,210,420);
//bar(210,420,240,420);
bar(240,420,270,420);
//bar(270,420,300,420);
//bar(300,420,330,420);
//bar(330,420,360,420);
bar(360,420,390,420);
//bar(390,420,420,420);
//bar(420,420,450,420);

//vertical bars
//1st column
bar(30,3,30,30);
//bar(30,30,30,60);
//bar(30,60,30,90);
bar(30,90,30,120);
//bar(30,120,30,150);
bar(30,150,30,180);
bar(30,180,30,210);
//bar(30,210,30,240);
bar(30,240,30,270);
bar(30,270,30,300);
bar(30,300,30,330);
bar(30,330,30,360);
//bar(30,360,30,390);
bar(30,390,30,420);
bar(30,420,30,450);

//2nd column
//bar(60,3,60,30);
bar(60,30,60,60);
bar(60,60,60,90);
//bar(60,90,60,120);
//bar(60,120,60,150);
//bar(60,150,60,180);
//bar(60,180,60,210);
bar(60,210,60,240);
bar(60,240,60,270);
//bar(60,270,60,300);
//bar(60,300,60,330);
//bar(60,330,60,360);
//bar(60,360,60,390);
//bar(60,390,60,420);
//bar(60,420,60,450);

//3rd column
//bar(90,3,90,30);
//bar(90,30,90,60);
bar(90,60,90,90);
bar(90,90,90,120);
bar(90,120,90,150);
bar(90,150,90,180);
bar(90,180,90,210);
//bar(90,210,90,240);
//bar(90,240,90,270);
//bar(90,270,90,300);
//bar(90,300,90,330);
//bar(90,330,90,360);
//bar(90,360,90,390);
//bar(90,390,90,420);
//bar(90,420,90,450);

int A=120;

//4th column
//bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//5th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//6th column
//bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//7th column
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//8th column
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//9th column
bar(A,3,A,30);
//bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//10th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
//bar(A,240,A,270);
//bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//11th column
//bar(A,3,A,30);
bar(A,30,A,60);
//bar(A,60,A,90);
bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
//bar(A,180,A,210);
bar(A,210,A,240);
bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
//bar(A,330,A,360);
bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//12th column
bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
//bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
bar(A,360,A,390);
//bar(A,390,A,420);
bar(A,420,A,450);
A+=30;

//13th column
//bar(A,3,A,30);
bar(A,30,A,60);
bar(A,60,A,90);
bar(A,90,A,120);
bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
bar(A,210,A,240);
//bar(A,240,A,270);
bar(A,270,A,300);
bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
A+=30;

//14th column
bar(A,3,A,30);
//bar(A,30,A,60);
bar(A,60,A,90);
//bar(A,90,A,120);
//bar(A,120,A,150);
bar(A,150,A,180);
bar(A,180,A,210);
//bar(A,210,A,240);
bar(A,240,A,270);
//bar(A,270,A,300);
//bar(A,300,A,330);
bar(A,330,A,360);
//bar(A,360,A,390);
bar(A,390,A,420);
//bar(A,420,A,450);
}
int ball4(int j,int k,int l,int *s)   //ball
{static int f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13;
  if(*s==0)
    {f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0,f8=0,f9=0,f10=0,f11=0,f12=0,f13=0;
    }
 circle(j,k,l);
 setcolor(WHITE);
 setfillstyle(SOLID_FILL,2);
 floodfill(j,k,WHITE);
//circle(15,45,10);
if(f1!=1)//checking and creating fruit1
 {circle(15,105,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(15,105,15);
 }
 if(f2!=1)//checking and creating fruit2
 {circle(15,255,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(15,255,15);
 }

 if(f3!=1)//checking and creating fruit3
 {circle(105,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(105,405,15);
 }
 if(f4!=1)//checking and creating fruit4
 {circle(135,345,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(135,345,15);
 }
 if(f5!=1)//checking and creating fruit5
 {circle(165,75,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(165,75,15);
 }
 if(f6!=1)//checking and creating fruit6
 {circle(165,225,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(165,225,15);
 }
 if(f7!=1)//checking and creating fruit7
 {circle(225,315,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,315,15);
 }
 if(f8!=1)//checking and creating fruit8
 {circle(345,15,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(345,15,15);
 }
 if(f9!=1)//checking and creating fruit9
 {circle(345,165,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(345,165,15);
 }
 if(f10!=1)//checking and creating fruit10
 {circle(315,375,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(315,375,15);
 }
 if(f11!=1)//checking and creating fruit11
 {circle(405,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(405,405,15);
 }
 if(f12!=1)//checking and creating fruit12
 {circle(405,225,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(405,225,15);
 }
 if(f13!=1)//checking and creating fruit13
 {circle(435,315,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(435,315,15);
 }
 if(f1==1&&f2==1&&f3==1&&f4==1&&f5==1&&f6==1&&f7==1&&f8==1&&f9==1&&f10==1&&f11==1&&f12==1&&f13==1)
 {circle(225,435,10);}
 if(j==225&&k==435)
  {sound();
    outtextxy(100,460,"Congratulations!");
  delay(1000);
  return 5;
}
else if(j==15&&k==105)//condition for fruit1
{if(f1!=1){
  sound();
ps=ps+25;}
 f1=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==15&&k==255)//condition for fruit2
{if(f2!=1){
  sound();
ps=ps+25;}
 f2=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==105&&k==405)//condition for fruit3
{if(f3!=1){
  sound();
ps=ps+25;}
 f3=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==135&&k==345)//condition for fruit4
{if(f4!=1){
  sound();
ps=ps+25;}
 f4=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==165&&k==75)//condition for fruit5
{if(f5!=1){
  sound();
ps=ps+25;}
 f5=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==165&&k==225)//condition for fruit6
{if(f6!=1){
  sound();
ps=ps+25;}
 f6=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==315)//condition for fruit7
{if(f7!=1){
  sound();
ps=ps+25;}
 f7=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==345&&k==15)//condition for fruit8
{if(f8!=1){
  sound();
ps=ps+25;}
 f8=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==345&&k==165)//condition for fruit9
{if(f9!=1){
  sound();
ps=ps+25;}
 f9=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==315&&k==375)//condition for fruit10
{if(f10!=1){
  sound();
ps=ps+25;}
 f10=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==405&&k==405)//condition for fruit11
{if(f11!=1){
  sound();
ps=ps+25;}
 f11=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==405&&k==225)//condition for fruit12
{if(f12!=1){
  sound();
ps=ps+25;}
 f12=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==435&&k==315)//condition for fruit13
{if(f13!=1){
  sound();
ps=ps+25;}
 f13=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
*s=1;
return 9999;
}
void condition4(int *j,int *k)
{
 if(*k==10){if(*j<440 && *j>0)*k+=5;}  //up
if(*j==10){if(*k<440 && *k>0)*j+=5;}       //left
if(*k==440){if(*j<440 && *j>0)*k-=5;}            //down
if(*j==440){if(*k<440 && *k>0)*j-=5;}                  //right
//for horizontal lines
//for 1st row
if(*j>=80&&*j<=190&&*k>=20&&*k<=40 || *j>=320&&*j<=370&&*k>=20&&*k<=40)
  {if(*k<=30)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 2nd row
if(*j>=0&&*j<=70&&*k>=50&&*k<=70 || *j>=80&&*j<=130&&*k>=50&&*k<=70 || *j>=140&&*j<=340&&*k>=50&&*k<=70 || *j>=350&&*j<=400&&*k>=50&&*k<=70 || *j>=410&&*j<=460&&*k>=50&&*k<=70)
   {if(*k<=60)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 3rd row
if(*j>=170&&*j<=280&&*k>=80&&*k<=100 || *j>=320&&*j<=370&&*k>=80&&*k<=100)
   {if(*k<=90)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 4th row
if(*j>=0&&*j<=70&&*k>=110&&*k<=130 || *j>=80&&*j<=190&&*k>=110&&*k<=130 || *j>=230&&*j<=280&&*k>=110&&*k<=130 || *j>=320&&*j<=370&&*k>=110&&*k<=130 || *j>=410&&*j<=460&&*k>=110&&*k<=130)
   {if(*k<=120)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 5th row
if(*j>=20&&*j<=70&&*k>=140&&*k<=160 || *j>=260&&*j<=310&&*k>=140&&*k<=160 || *j>=320&&*j<=400&&*k>=140&&*k<=160)
   {if(*k<=150)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 6th row
if(*j>=50&&*j<=100&&*k>=170&&*k<=190 || *j>=110&&*j<=250&&*k>=170&&*k<=190 || *j>=320&&*j<=370&&*k>=170&&*k<=190)
   {if(*k<=180)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 7th row
if(*j>=20&&*j<=70&&*k>=200&&*k<=220 || *j>=80&&*j<=130&&*k>=200&&*k<=220 || *j>=290&&*j<=340&&*k>=200&&*k<=220 || *j>=410&&*j<=460&&*k>=200&&*k<=220)
   {if(*k<=210)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 8th row
if(*j>=0&&*j<=40&&*k>=230&&*k<=250 || *j>=50&&*j<=100&&*k>=230&&*k<=250 || *j>=110&&*j<=190&&*k>=230&&*k<=250 || *j>=200&&*j<=310&&*k>=230&&*k<=250 || *j>=350&&*j<=430&&*k>=230&&*k<=250)
   {if(*k<=240)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 9th row
if(*j>=50&&*j<=130&&*k>=260&&*k<=280 || *j>=170&&*j<=220&&*k>=260&&*k<=280 || *j>=260&&*j<=370&&*k>=260&&*k<=280)
   {if(*k<=270)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 10th row
if(*j>=20&&*j<=70&&*k>=290&&*k<=310 || *j>=80&&*j<=130&&*k>=290&&*k<=310 || *j>=170&&*j<=280&&*k>=290&&*k<=310 || *j>=350&&*j<=460&&*k>=290&&*k<=310)
   {if(*k<=300)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 11th row
if(*j>=20&&*j<=100&&*k>=320&&*k<=340 || *j>=140&&*j<=190&&*k>=320&&*k<=340 || *j>=260&&*j<=310&&*k>=320&&*k<=340 || *j>=320&&*j<=370&&*k>=320&&*k<=340)
   {if(*k<=330)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 12th row
if(*j>=50&&*j<=160&&*k>=350&&*k<=370 || *j>=170&&*j<=220&&*k>=350&&*k<=370 || *j>=290&&*j<=340&&*k>=350&&*k<=370 || *j>=410&&*j<=460&&*k>=350&&*k<=370)
   {if(*k<=360)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 13th row
if(*j>=20&&*j<=130&&*k>=380&&*k<=400 || *j>=200&&*j<=250&&*k>=380&&*k<=400 || *j>=260&&*j<=310&&*k>=380&&*k<=400 || *j>=380&&*j<=430&&*k>=380&&*k<=400)
   {if(*k<=390)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 14th row
if(*j>=50&&*j<=130&&*k>=410&&*k<=430 || *j>=140&&*j<=190&&*k>=410&&*k<=430 || *j>=230&&*j<=280&&*k>=410&&*k<=430 || *j>=350&&*j<=400&&*k>=410&&*k<=430)
   {if(*k<=420)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for vertical line
//1st column
if(*k>=0&&*k<=40&&*j>=20&&*j<=40 || *k>=80&&*k<=130&&*j>=20&&*j<=40 || *k>=140&&*k<=220&&*j>=20&&*j<=40 || *k>=230&&*k<=370&&*j>=20&&*j<=40 || *k>=380&&*k<=460&&*j>=20&&*j<=40)
   {if(*j<=30)
    {*j-=5;
     }
     else
      *j+=5;
   }
//2nd column
if(*k>=20&&*k<=100&&*j>=50&&*j<=70 || *k>=200&&*k<=280&&*j>=50&&*j<=70)
   {if(*j<=60)
    {*j-=5;
     }
     else
      *j+=5;
   }
//3rd column
if(*k>=50&&*k<=220&&*j>=80&&*j<=100)
   {if(*j<=90)
    {*j-=5;
     }
     else
      *j+=5;
   }
//4th column
if(*k>=50&&*k<=100&&*j>=110&&*j<=130 || *k>=140&&*k<=190&&*j>=110&&*j<=130 || *k>=260&&*k<=370&&*j>=110&&*j<=130 || *k>=380&&*k<=430&&*j>=110&&*j<=130)
   {if(*j<=120)
    {*j-=5;
     }
     else
      *j+=5;
   }
//5th column
if(*k>=20&&*k<=130&&*j>=140&&*j<=160 || *k>=140&&*k<=460&&*j>=140&&*j<=160)
   {if(*j<=150)
    {*j-=5;
     }
     else
      *j+=5;
   }
//6th column
if(*k>=110&&*k<=160&&*j>=170&&*j<=190 || *k>=170&&*k<=220&&*j>=170&&*j<=190 || *k>=350&&*k<=400&&*j>=170&&*j<=190)
   {if(*j<=180)
    {*j-=5;
     }
     else
      *j+=5;
   }
//7th column
if(*k>=0&&*k<=40&&*j>=200&&*j<=220 || *k>=80&&*k<=160&&*j>=200&&*j<=220 || *k>=200&&*k<=280&&*j>=200&&*j<=220 || *k>=290&&*k<=370&&*j>=200&&*j<=220 || *k>=380&&*k<=460&&*j>=200&&*j<=220)
   {if(*j<=210)
    {*j-=5;
     }
     else
      *j+=5;
   }
//8th column
if(*k>=20&&*k<=70&&*j>=230&&*j<=250 || *k>=140&&*k<=220&&*j>=230&&*j<=250 || *k>=260&&*k<=400&&*j>=230&&*j<=250 || *k>=410&&*k<=460&&*j>=230&&*j<=250)
   {if(*j<=240)
    {*j-=5;
     }
     else
      *j+=5;
   }
//9th column
if(*k>=0&&*k<=40&&*j>=260&&*j<=280 || *k>=80&&*k<=250&&*j>=260&&*j<=280 || *k>=260&&*k<=310&&*j>=260&&*j<=280 || *k>=320&&*k<=430&&*j>=260&&*j<=280)
   {if(*j<=270)
    {*j-=5;
     }
     else
      *j+=5;
   }
//10th column
if(*k>=20&&*k<=160&&*j>=290&&*j<=310 || *k>=170&&*k<=220&&*j>=290&&*j<=310 || *k>=290&&*k<=370&&*j>=290&&*j<=310 || *k>=380&&*k<=430&&*j>=290&&*j<=310)
   {if(*j<=300)
    {*j-=5;
     }
     else
      *j+=5;
   }
//11th column
if(*k>=20&&*k<=70&&*j>=320&&*j<=340 || *k>=80&&*k<=130&&*j>=320&&*j<=340 || *k>=140&&*k<=190&&*j>=320&&*j<=340 || *k>=200&&*k<=340&&*j>=320&&*j<=340 || *k>=350&&*k<=430&&*j>=320&&*j<=340)
   {if(*j<=330)
    {*j-=5;
     }
     else
      *j+=5;
   }
//12th column
if(*k>=0&&*k<=40&&*j>=350&&*j<=370 || *k>=50&&*k<=100&&*j>=350&&*j<=370 || *k>=170&&*k<=220&&*j>=350&&*j<=370 || *k>=230&&*k<=280&&*j>=350&&*j<=370 || *k>=320&&*k<=400&&*j>=350&&*j<=370 || *k>=410&&*k<=460&&*j>=350&&*j<=370)
   {if(*j<=360)
    {*j-=5;
     }
     else
      *j+=5;
   }
//13th column
if(*k>=20&&*k<=250&&*j>=380&&*j<=400 || *k>=260&&*k<=370&&*j>=380&&*j<=400 || *k>=380&&*k<=430&&*j>=380&&*j<=400)
   {if(*j<=390)
    {*j-=5;
     }
     else
      *j+=5;
   }
//14th column
if(*k>=0&&*k<=40&&*j>=410&&*j<=430 || *k>=50&&*k<=100&&*j>=410&&*j<=430 || *k>=140&&*k<=220&&*j>=410&&*j<=430 || *k>=230&&*k<=280&&*j>=410&&*j<=430 || *k>=320&&*k<=370&&*j>=410&&*j<=430 || *k>=380&&*k<=430&&*j>=410&&*j<=430)
   {if(*j<=420)
    {*j-=5;
     }
     else
      *j+=5;
   }

}
int level_4()
{
 int i,j=15,k=15,l=10,m=10,co=0,inc=0,s=0;
 char c;
 int a=75,e=165,f=315,vx=345,hy=45,a2=375,CR,CR1,CR2,CR3,CR4,CR5;
 float b=75,d=165,g=85,vy=345,hx=165,a1=15,a1spd=2.0,hxspd=2.0,bspeed=2.0,dspeed=2.0,gspeed=2.0,vyspeed=2.0;
 loading();
 while(1)
 {setcolor(13);
 settextstyle(1,HORIZ_DIR,4);
 outtextxy(275,100,"LEVEL 4");
 settextstyle(0,HORIZ_DIR,0);
 setcolor(9);
 outtextxy(215,200,"Press 'ENTER' to play the level.");
 char ch=getch();
 if(ch==13)
  {setfillstyle(SOLID_FILL,0);
    bar(0,0,getmaxx(),getmaxy());
    break;
  }
 getch();
  }
 body4();          //draw the figure
 ball4(j,k,l,&s);     //draw the  ball

 countm(&co,&inc);

for(i=0;i<m++;i++)
{while(1){
body4();          //draw the figure
ball4(j,k,l,&s);     //draw the  ball
drawbot(a,b);   //draw bot
drawbot(d,e);
drawbot(f,g);
drawbot(vx,vy);
drawbot(hx,hy);
drawbot(a1,a2);
b=b+bspeed;      //bot movement speed
d=d+dspeed;
g=g+gspeed;
vy=vy+vyspeed;
hx=hx+hxspd;
a1=a1+a1spd;
if(a1<15||a1>135)
{a1spd=a1spd*-1;
}
if(b<75||b>165)
{bspeed=bspeed*-1;
}
if(d<165||d>225)
{dspeed=dspeed*-1;
}
if(g<85||g>195)
{gspeed=gspeed*-1;
}
if(vy<345||vy>435)
{vyspeed=vyspeed*-1;
}
if(hx<165||hx>230)
{hxspd=hxspd*-1;
}
delay(20);       //delay is making laggy
CR=collision(j,k,a,b);  //collision test with coordinate of bot and player
CR1=collision(j,k,d,e);
CR2=collision(j,k,f,g);
CR3=collision(j,k,vx,vy);
CR4=collision(j,k,hx,hy);
CR5=collision(j,k,a1,a2);
if(CR==10||CR1==10||CR2==10||CR3==10||CR4==10||CR5==10)          //10 being the distance between player and bot centers they collide!
{cleardevice();
  gameover();
return 9999;}
if(kbhit())break;
}condition4(&j,&k); //cheacking condition
 countm(&co,&inc);
 c=getch();
 if(c==75||c=='a') j-=5;
 if(c==80||c=='s') k+=5;
 if(c==77||c=='d') j+=5;
 if(c==72||c=='w') k-=5;
 if(c==27) return 0;
  body4();        //draw the figure
 int v;
 v=ball4(j,k,l,&s);
 if (v==5) return 5;
 }
 return 9999; //draw the ball
}
void body5()
{
setcolor(WHITE);setfillstyle(SOLID_FILL,7);
bar(3,3,450,450);
setfillstyle(SOLID_FILL,BLACK);
//bar(3,3,450,30);//1st row
bar(180,30,210,30);
bar(300,30,360,30);
//bar(3,60,450,60);2nd row
bar(30,60,120,60);
bar(210,60,270,60);
bar(300,60,330,60);
//bar(3,90,450,90);3rd row
bar(60,90,90,90);
bar(150,90,240,90);
bar(330,90,390,90);
//bar(3,120,450,120);4th row
bar(30,120,60,120);
bar(270,120,420,120);
//bar(3,150,450,150);5th row
bar(120,150,270,150);
//bar(3,180,450,180);6th row
bar(30,180,60,180);
bar(150,180,210,180);
bar(270,180,420,180);
//bar(3,210,450,210);7th row
bar(60,210,150,210);
bar(210,210,240,210);
bar(300,210,450,210);
//bar(3,240,450,240);8th row
bar(30,240,60,240);
bar(90,240,210,240);
bar(330,240,390,240);
bar(420,240,450,240);
//bar(3,270,450,270);9th row
bar(60,270,150,270);
bar(210,270,240,270);
bar(300,270,330,270);
bar(390,270,420,270);
//bar(3,300,450,300);10th row
bar(3,300,90,300);
bar(120,300,150,300);
bar(240,300,270,300);
bar(420,300,450,300);
//bar(3,330,450,330);11th row
bar(30,330,120,330);
bar(150,330,270,330);
bar(300,330,360,330);
//bar(3,360,450,360);12th row
bar(30,360,60,360);
bar(120,360,180,360);
bar(270,360,330,360);
bar(360,360,420,360);
//bar(3,390,450,390);13th row
bar(60,390,90,390);
bar(210,390,240,390);
bar(330,390,360,390);
bar(390,390,420,390);

//bar(3,420,450,420);14th row
bar(30,420,60,420);
bar(90,420,120,420);
bar(180,420,240,420);
bar(270,420,390,420);

//bar(30,3,30,450);1 col.
  bar(30,30,30,150);
bar(30,180,30,270);
bar(30,330,30,360);
bar(30,390,30,420);
//bar(60,3,60,450);2 col.
bar(60,3,60,30);
bar(60,120,60,180);
bar(60,240,60,270);
bar(60,360,60,390);
bar(60,420,60,450);
//bar(90,3,90,450);3 col.
bar(90,3,90,30);
bar(90,90,90,240);
bar(90,270,90,300);
bar(90,330,90,360);
bar(90,390,90,420);
//bar(120,3,120,450);4 col.
bar(120,30,120,180);
bar(120,300,120,330);
bar(120,360,120,420);
//bar(150,3,150,450);5 col.
bar(150,3,150,60);
bar(150,90,150,120);
bar(150,180,150,210);
bar(150,330,150,360);
bar(150,390,150,450);
//bar(180,3,180,450);6 col.
bar(180,30,180,90);
bar(180,120,180,150);
bar(180,210,180,330);
bar(180,360,180,420);
//bar(210,3,210,450);7 col.
bar(210,30,210,60);
bar(210,120,210,150);
bar(210,180,210,210);
bar(210,300,210,390);
//bar(240,3,240,450);8 col.
bar(240,3,240,30);
bar(240,90,240,120) ;
bar(240,150,240,180);
bar(240,210,240,270);
bar(240,360,240,390);
bar(240,420,240,450);
//bar(270,3,270,450);9 col.
bar(270,3,270,90);
bar(270,120,270,150);
bar(270,180,270,420);
//bar(300,3,300,450);10 col.
bar(300,30,300,120);
bar(300,150,300,180);
bar(300,210,300,300);
bar(300,360,300,390);
//bar(330,3,330,450);11 col.
bar(330,120,330,150);
bar(330,270,330,300);
//bar(360,3,360,450);12 col.
bar(360,30,360,90);
bar(360,150,360,180);
bar(360,240,360,390);
//bar(390,3,390,450);13 col.
bar(390,3,390,60);
bar(390,120,390,150);
//bar(420,3,420,450);14 col.
bar(420,30,420,120);
bar(420,150,420,180);
bar(420,300,420,390);
bar(420,420,420,450);
}
int ball5(int j,int k,int l,int *s)   //ball
{static int f1,f2,f3,f4,f5,f6,f7,f8,f9,f10,f11,f12,f13,f14,f15;
  if(*s==0)
  {f1=0,f2=0,f3=0,f4=0,f5=0,f6=0,f7=0,f8=0,f9=0,f10=0,f11=0,f12=0,f13=0,f14=0,f15=0;
  }
 circle(j,k,l);
 setcolor(WHITE);
 setfillstyle(SOLID_FILL,2);
 floodfill(j,k,WHITE);
//circle(15,45,10);
if(f1!=1)//checking and creating fruit1
 {circle(105,15,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(105,15,15);
 }
 if(f2!=1)//checking and creating fruit2
 {circle(255,15,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(255,15,15);
 }

 if(f3!=1)//checking and creating fruit3
 {circle(405,105,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(405,105,15);
 }
 if(f4!=1)//checking and creating fruit4
 {circle(345,135,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(345,135,15);
 }
 if(f5!=1)//checking and creating fruit5
 {circle(75,165,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(75,165,15);
 }
 if(f6!=1)//checking and creating fruit6
 {circle(225,165,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,165,15);
 }
 if(f7!=1)//checking and creating fruit7
 {circle(315,225,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(315,225,15);
 }
 if(f8!=1)//checking and creating fruit8
 {circle(15,345,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(15,345,15);
 }
 if(f9!=1)//checking and creating fruit9
 {circle(170,185,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(170,185,15);
 }
 if(f10!=1)//checking and creating fruit10
 {circle(375,315,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(375,315,15);
 }
 if(f11!=1)//checking and creating fruit11
 {circle(405,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(405,405,15);
 }
 if(f12!=1)//checking and creating fruit12
 {circle(225,405,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,405,15);
 }
 if(f13!=1)//checking and creating fruit13
 {circle(315,435,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(315,435,15);
 }
 if(f14!=1)//checking and creating fruit14
 {circle(225,345,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(225,345,15);
 }
 if(f15!=1)//checking and creating fruit15
 {circle(315,135,10);
 setfillstyle(SOLID_FILL,14);
 floodfill(315,135,15);
 }
 if(f1==1&&f2==1&&f3==1&&f4==1&&f5==1&&f6==1&&f7==1&&f8==1&&f9==1&&f10==1&&f11==1&&f12==1&&f13==1&&f14==1&&f15==1)
   {circle(225,435,10);
    }
 if(j==225&&k==435)//end point
{sound();
    outtextxy(100,460,"Congratulations!");
delay(1000);
cleardevice();
gameoverw();
return 6;
}
else if(j==105&&k==15)//condition for fruit1
{if(f1!=1){
  sound();
ps=ps+25;}
 f1=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==255&&k==15)//condition for fruit2
{if(f2!=1){
  sound();
ps=ps+25;}
 f2=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==405&&k==105)//condition for fruit3
{if(f3!=1){
  sound();
ps=ps+25;}
 f3=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==345&&k==135)//condition for fruit4
{if(f4!=1){
  sound();
ps=ps+25;}
 f4=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==75&&k==165)//condition for fruit5
{if(f5!=1){
  sound();
ps=ps+25;}
 f5=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==165)//condition for fruit6
{if(f6!=1){
  sound();
ps=ps+25;}
 f6=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==315&&k==225)//condition for fruit7
{if(f7!=1){
  sound();
ps=ps+25;}
 f7=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==15&&k==345)//condition for fruit8
{if(f8!=1){
  sound();
ps=ps+25;}
 f8=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==170&&k==185)//condition for fruit9
{if(f9!=1){
  sound();
ps=ps+25;}
 f9=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==375&&k==315)//condition for fruit10
{if(f10!=1){
  sound();
ps=ps+25;}
 f10=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==405&&k==405)//condition for fruit11
{if(f11!=1){
  sound();
ps=ps+25;}
 f11=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==405)//condition for fruit12
{if(f12!=1){
  sound();
ps=ps+25;}
 f12=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==315&&k==435)//condition for fruit13
{if(f13!=1){
  sound();
ps=ps+25;}
 f13=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==225&&k==345)//condition for fruit14
{if(f14!=1){
  sound();
ps=ps+25;}
 f14=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
else if(j==315&&k==135)//condition for fruit15
{if(f15!=1){
  sound();
ps=ps+25;}
 f15=1;
 circle(j,k,10);
 setfillstyle(SOLID_FILL,15);
 floodfill(j,k,14);
}
*s=1;
return 9999;
}
void condition5(int *j,int *k)
{
 if(*k==10){if(*j<440 && *j>0)*k+=5;}  //up
if(*j==10){if(*k<440 && *k>0)*j+=5;}       //left
if(*k==440){if(*j<440 && *j>0)*k-=5;}            //down
if(*j==440){if(*k<440 && *k>0)*j-=5;}                  //right
//now the vertical lines
//for 1st vertical line
if(*k<=155&&*k>=25 &&*j<=40&&*j>=20 || *k<=275&&*k>=175 &&*j<=40&&*j>=20||*k<=365&&*k>=325 &&*j<=40&&*j>=20||*k<=425&&*k>=385 &&*j<=40&&*j>=20)
  {if(*j<=35)*j-=10;
  *j+=5;
  }
//2nd vertical line
if(*k<=35&&*k>=0 &&*j<=70&&*j>=50 || *k<=185&&*k>=115 &&*j<=70&&*j>=50||*k<=275&&*k>=235 &&*j<=70&&*j>=50||*k<=395&&*k>=355 &&*j<=70&&*j>=50||*k<=450&&*k>=415&&*j<=70&&*j>=50)
  {if(*j<=65)*j-=10;
  *j+=5;
  }
//3rd vertical line
if(*k<=35&&*k>=0 &&*j<=100&&*j>=80 || *k<=245&&*k>=85 &&*j<=100&&*j>=80||*k<=305&&*k>=265 &&*j<=100&&*j>=80||*k<=365&&*k>=335 &&*j<=100&&*j>=80 ||*k<=425&&*k>=385 &&*j<=100&&*j>=80)
  {if(*j<=95)*j-=10;
  *j+=5;
  }
//4th vLine
if(*k<=185&&*k>=35 &&*j<=130&&*j>=110 ||*k<=335&&*k>=295 &&*j<=130&&*j>=110|| *k<=425&&*k>=355 &&*j<=130&&*j>=110)
  {if(*j<=125)*j-=10;
  *j+=5;
  }
//5th line
if(*k<=65&&*k>=0 &&*j<=160&&*j>=140 || *k<=125&&*k>=85 &&*j<=160&&*j>=140||*k<=215&&*k>=175 &&*j<=160&&*j>=140||*k<=365&&*k>=325 &&*j<=160&&*j>=140||*k<=450&&*k>=385 &&*j<=160&&*j>=140)
  {if(*j<=155)*j-=10;
  *j+=5;
  }
//6th line
if(*k>=25&&*k<=95 &&*j<=190&&*j>=170 || *k>=115&&*k<=155 &&*j<=190&&*j>=170 || *k>=205&&*k<=335&&*j>=170&&*j<=190|| *k>=355&&*k<=425 &&*j>=170&&*j<=190)
  {if(*j<=185)*j-=10;
  *j+=5;
  }

//7th line
if(*k<=65&&*k>=25 &&*j<=220&&*j>=200 || *k<=155&&*k>=115 &&*j<=220&&*j>=200|| *k<=215&&*k>=175 &&*j<=220&&*j>=200|| *k<=395&&*k>=295 &&*j<=220&&*j>=200)
  {if(*j<=215)*j-=10;
  *j+=5;
  }
//8th column
if(*k>=0&&*k<=35&&*j>=230&&*j<=250 || *k>=85&&*k<=125&&*j>=230&&*j<=250 || *k>=145&&*k<=185&&*j>=230&&*j<=250 || *k>=205&&*k<=275&&*j>=230&&*j<=250||*k>=355&&*k<=395&&*j>=230&&*j<=250||*k>=415&&*k<=450&&*j>=230&&*j<=250)
   {if(*j<=240)
    {*j-=5;
     }
     else
      *j+=5;
   }
//9th column
if(*k>=0&&*k<=95&&*j>=260&&*j<=280 || *k>=115&&*k<=155&&*j>=260&&*j<=280 || *k>=175&&*k<=425&&*j>=260&&*j<=280)
   {if(*j<=270)
    {*j-=5;
     }
     else
      *j+=5;
   }
//10th column
if(*k>=25&&*k<=125&&*j>=290&&*j<=310 || *k>=145&&*k<=185&&*j>=290&&*j<=310 || *k>=205&&*k<=305&&*j>=290&&*j<=310 || *k>=355&&*k<=395&&*j>=290&&*j<=310)
   {if(*j<=300)
    {*j-=5;
     }
     else
      *j+=5;
   }
//11th column
if(*k>=115&&*k<=155&&*j>=320&&*j<=340 || *k>=265&&*k<=305&&*j>=320&&*j<=340)
   {if(*j<=330)
    {*j-=5;
     }
     else
      *j+=5;
   }
//12th column
if(*k>=25&&*k<=95&&*j>=350&&*j<=370 || *k>=145&&*k<=185&&*j>=350&&*j<=370 || *k>=235&&*k<=395&&*j>=350&&*j<=370)
   {if(*j<=360)
    {*j-=5;
     }
     else
      *j+=5;
   }
//13th column
if(*k>=0&&*k<=65&&*j>=380&&*j<=400 || *k>=115&&*k<=155&&*j>=380&&*j<=400)
   {if(*j<=390)
    {*j-=5;
     }
     else
      *j+=5;
   }
//14th column
if(*k>=25&&*k<=125&&*j>=410&&*j<=430 || *k>=145&&*k<=185&&*j>=410&&*j<=430 || *k>=295&&*k<=395&&*j>=410&&*j<=430 || *k>=415&&*k<=450&&*j>=410&&*j<=430)
   {if(*j<=420)
    {*j-=5;
     }
     else
      *j+=5;
   }
//1st row
if(*j>=175&&*j<=215&&*k>=20&&*k<=40 || *j>=295&&*j<=365&&*k>=20&&*k<=40)
  {if(*k<=30)*k-=10;
   *k+=5;
   }
//2nd row
if(*j>=25&&*j<=125&&*k>=50&&*k<=70 || *j>=205&&*j<=275&&*k>=50&&*k<=70||*j>=295&&*j<=335&&*k>=50&&*k<=70)
  {if(*k<=60)*k-=10;
   *k+=5;
   }
//3rd row
if(*j>=55&&*j<=95&&*k>=80&&*k<=100 ||*j>=145&&*j<=245&&*k>=80&&*k<=100||*j>=325&&*j<=395&&*k>=80&&*k<=100)
  {if(*k<=90)*k-=10;
   *k+=5;
   }
//for 4th row
if(*j>=25&&*j<=65&&*k>=110&&*k<=130 || *j>=265&&*j<=425&&*k>=110&&*k<=130)
   {if(*k<=120)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 5th row
if(*j>=115&&*j<=275&&*k>=140&&*k<=160)
   {if(*k<=150)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 6th row
if(*j>=25&&*j<=65&&*k>=170&&*k<=190 || *j>=145&&*j<=215&&*k>=170&&*k<=190 || *j>=265&&*j<=425&&*k>=170&&*k<=190)
   {if(*k<=180)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 7th row
if(*j>=55&&*j<=155&&*k>=200&&*k<=220 || *j>=205&&*j<=245&&*k>=200&&*k<=220 || *j>=295&&*j<=450&&*k>=200&&*k<=220)
   {if(*k<=210)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 8th row
if(*j>=25&&*j<=65&&*k>=230&&*k<=250 || *j>=85&&*j<=215&&*k>=230&&*k<=250||*j>=325&&*j<=395&&*k>=230&&*k<=250|| *j>=415&&*j<=450&&*k>=230&&*k<=250)
   {if(*k<=240)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 9th row
if(*j>=55&&*j<=155&&*k>=260&&*k<=280 || *j>=205&&*j<=245&&*k>=260&&*k<=280 || *j>=295&&*j<=335&&*k>=260&&*k<=280||*j>=385&&*j<=425&&*k>=260&&*k<=280)
   {if(*k<=270)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 10th row
if(*j>=0&&*j<=95&&*k>=290&&*k<=310 || *j>=115&&*j<=155&&*k>=290&&*k<=310 || *j>=235&&*j<=275&&*k>=290&&*k<=310|| *j>=415&&*j<=450&&*k>=290&&*k<=310)
   {if(*k<=300)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 11th row
if(*j>=25&&*j<=125&&*k>=320&&*k<=340 || *j>=145&&*j<=275&&*k>=320&&*k<=340||*j>=295&&*j<=365&&*k>=320&&*k<=340)
   {if(*k<=330)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 12th row
if(*j>=25&&*j<=65&&*k>=350&&*k<=370 || *j>=115&&*j<=185&&*k>=350&&*k<=370 || *j>=265&&*j<=335&&*k>=350&&*k<=370|| *j>=355&&*j<=425&&*k>=350&&*k<=370)
   {if(*k<=360)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 13th row
if(*j>=55&&*j<=95&&*k>=380&&*k<=400 || *j>=205&&*j<=245&&*k>=380&&*k<=400 || *j>=325&&*j<=365&&*k>=380&&*k<=400||*j>=385&&*j<=425&&*k>=380&&*k<=400)
   {if(*k<=390)
    {*k-=5;
     }
     else
      *k+=5;
   }
//for 14th row
if(*j>=25&&*j<=65&&*k>=410&&*k<=430 || *j>=85&&*j<=125&&*k>=410&&*k<=430 || *j>=175&&*j<=245&&*k>=410&&*k<=430||*j>=265&&*j<=395&&*k>=410&&*k<=430)
   {if(*k<=420)
    {*k-=5;
     }
     else
      *k+=5;
   }
}

int level_5()
{
 int i,j=15,k=15,l=10,m=10,co=0,inc=0,s=0;
 char c;
 int a=135,e=285,f=435,vx=15,hy=45,a2=405,b1=165,c2=285,CR,CR1,CR2,CR3,CR4,CR5,CR6,CR7;
 float b=25,d=195,g=25,vy=370,hx=45,a1=290,b2=255,c1=375,c1spd=0.4,b2spd=0.3,a1spd=0.5,hxspd=0.8,bspeed=1.5,dspeed=0.9,gspeed=2.0,vyspeed=0.6;
 loading();
 while(1)
 {setcolor(13);
 settextstyle(1,HORIZ_DIR,4);
 outtextxy(275,100,"LEVEL 5");
 settextstyle(0,HORIZ_DIR,0);
 setcolor(9);
 outtextxy(215,200,"Press 'ENTER' to play the level.");
 char ch=getch();
 if(ch==13)
  {setfillstyle(SOLID_FILL,0);
    bar(0,0,getmaxx(),getmaxy());
    break;
  }
 getch();
  }
 body5();          //draw the figure
 ball5(j,k,l,&s);     //draw the  ball

 countm(&co,&inc);

for(i=0;i<m++;i++)
{while(1){
body5();          //draw the figure
ball5(j,k,l,&s);     //draw the  ball
drawbot(a,b);   //draw bot
drawbot(d,e);
drawbot(f,g);
drawbot(vx,vy);
drawbot(hx,hy);
drawbot(a1,a2);
drawbot(b1,b2);
drawbot(c1,c2);
b=b+bspeed;      //bot movement speed
d=d+dspeed;
g=g+gspeed;
vy=vy+vyspeed;
hx=hx+hxspd;
a1=a1+a1spd;
b2=b2+b2spd;
c1=c1+c1spd;
if(a1<285||a1>380)
{a1spd=a1spd*-1;
}
if(b2<255||b2>320)
{b2spd=b2spd*-1;
}
if(c1<375||c1>440)
{c1spd=c1spd*-1;
}
if(b<25||b>140)
{bspeed=bspeed*-1;
}
if(d<195||d>260)
{dspeed=dspeed*-1;
}
if(g<25||g>200)
{gspeed=gspeed*-1;
}
if(vy<370||vy>440)
{vyspeed=vyspeed*-1;
}
if(hx<45||hx>105)
{hxspd=hxspd*-1;
}
delay(20);       //delay is making laggy
CR=collision(j,k,a,b);  //collision test with coordinate of bot and player
CR1=collision(j,k,d,e);
CR2=collision(j,k,f,g);
CR3=collision(j,k,vx,vy);
CR4=collision(j,k,hx,hy);
CR5=collision(j,k,a1,a2);
CR6=collision(j,k,b1,b2);
CR7=collision(j,k,c1,c2);
if(CR==10||CR1==10||CR2==10||CR3==10||CR4==10||CR5==10||CR6==10||CR7==10)          //10 being the distance between player and bot centers they collide!
{cleardevice();
  gameover();
return 9999;}
if(kbhit())break;
}condition5(&j,&k); //cheacking condition
 countm(&co,&inc);
 c=getch();
 if(c==75||c=='a') j-=5;
 if(c==80||c=='s') k+=5;
 if(c==77||c=='d') j+=5;
 if(c==72||c=='w') k-=5;
 if(c==27) return 0;
  body5();        //draw the figure
 int v;
 v=ball5(j,k,l,&s);
 if (v==6) return 6;
 }
 return 9999; //draw the ball
}
int zero()
{ int flag;
  flag=level_1();
  if(flag==2)flag=level_2();
  if(flag==3)flag=level_3();
  if(flag==4)flag=level_4();
  if(flag==5)flag=level_5();
  if(flag==6)return 11;
 getch();
 return 9999;
}
void one(){
setfillstyle(SOLID_FILL,0);
bar(0,0,getmaxx(),getmaxy());
printf("\t\t\tINSTRUCTIONS\n--> Use arrow keys or a,s,d,w key move the character!\n--> Score points by eating circle points!\n--> Reach the destination to clear the levels!\n--> Don't press the movement keys too long!\n");
for(int i=0;;i++)
{int x,k;
if(kbhit()){
  k=getch();
  if(k==27)break;
  }
}
}
void two(){
clrscr();
setfillstyle(SOLID_FILL,0);
bar(0,0,getmaxx(),getmaxy());
highs();
}

void three(){
exit(1);
}

void main(){
int gm,gd=DETECT;
initgraph(&gd,&gm,"..\\bgi");
int a=4,b=15,c=15,d=15,n=1,key=0;
char k;
  menu:
  k=NULL;n=1;
  while(key!=27){
    setfillstyle(11,9);
    bar(0,0,getmaxx(),getmaxy());
    setcolor(4);
    settextstyle(0,0,9);
    outtextxy(10,getmaxy()/2-100,"THE");
    outtextxy(35,getmaxy()/2-20,"MAZE");
    setcolor(a);
    settextstyle(0,0,2);
    outtextxy(getmaxx()/2+20,80,"Start");
    setcolor(b);
    outtextxy(getmaxx()/2+20,110,"Instruction");
    setcolor(c);
    outtextxy(getmaxx()/2+20,140,"High Score");
    setcolor(d);
    outtextxy(getmaxx()/2+20,170,"Exit");
         k=getche();
      key=(int)k;
      if(key==80)n++;
      else if(key==72)n--;
      if(n==0)n=4;
      if(n==5)n=1;
      if(n==1)a=4,b=15,c=15,d=15;
      else if(n==2)a=15,b=4,c=15,d=15;
      else if(n==3)a=15,b=15,c=4,d=15;
      else if(n==4)a=15,b=15,c=15,d=4;
      if(key==13){
                if(n==1)zero();
                else if(n==2)one();
                else if(n==3)two();
                else if(n==4)three();
              }
              
        }
}